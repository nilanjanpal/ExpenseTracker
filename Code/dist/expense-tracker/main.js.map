{"version":3,"file":"main.js","mappings":"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":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/signup/signup.component.ts","./src/app/auth/signup/signup.component.html","./src/app/child-route/dashboard-routing.module.ts","./src/app/child-route/expense-routing.module.ts","./src/app/child-route/profile-routing.module.ts","./src/app/dashboard/annual-expense-category-graph/annual-expense-category-graph.component.ts","./src/app/dashboard/annual-expense-category-graph/annual-expense-category-graph.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/monthly-expense-graph/monthly-expense-graph.component.ts","./src/app/dashboard/monthly-expense-graph/monthly-expense-graph.component.html","./src/app/dashboard/yearly-expense-category-graph/yearly-expense-category-graph.component.ts","./src/app/dashboard/yearly-expense-category-graph/yearly-expense-category-graph.component.html","./src/app/dashboard/yearly-expense-graph/yearly-expense-graph.component.ts","./src/app/dashboard/yearly-expense-graph/yearly-expense-graph.component.html","./src/app/expense/edit-expense/edit-expense.component.ts","./src/app/expense/edit-expense/edit-expense.component.html","./src/app/expense/expense-history/expense-expand-panel/expense-expand-panel.component.ts","./src/app/expense/expense-history/expense-expand-panel/expense-expand-panel.component.html","./src/app/expense/expense-history/expense-history.component.ts","./src/app/expense/expense-history/expense-history.component.html","./src/app/expense/expense-history/expense-table/expense-table.component.ts","./src/app/expense/expense-history/expense-table/expense-table.component.html","./src/app/expense/expense.component.ts","./src/app/expense/expense.component.html","./src/app/expense/new-expense/new-expense.component.ts","./src/app/expense/new-expense/new-expense.component.html","./src/app/material.module.ts","./src/app/navigation/header/header.component.ts","./src/app/navigation/header/header.component.html","./src/app/navigation/sidebar/sidebar.component.ts","./src/app/navigation/sidebar/sidebar.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/services/auth-guard.service.ts","./src/app/services/auth-interceptor.ts","./src/app/services/auth.service.ts","./src/app/services/dashboard.service.ts","./src/app/services/expense.service.ts","./src/app/services/feedback.service.ts","./src/app/services/util.service.ts","./src/app/shared/dialog/dialog.component.ts","./src/app/shared/dialog/dialog.component.html","./src/app/shared/feedback-form/feedback-form.component.ts","./src/app/shared/feedback-form/feedback-form.component.html","./src/app/shared/loading/loading.component.ts","./src/app/shared/loading/loading.component.html","./src/app/store/app.reducer.ts","./src/app/store/auth.action.ts","./src/app/store/auth.reducer.ts","./src/app/store/dashboard.action.ts","./src/app/store/dashboard.reducer.ts","./src/app/store/expense.action.ts","./src/app/store/expense.reducer.ts","./src/environments/environment.ts","./src/main.ts","./node_modules/moment/locale/ sync ^\\.\\/.*$"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './auth/login/login.component';\nimport { SignupComponent } from './auth/signup/signup.component';\n\nconst routes: Routes = [\n  {path: 'login', component: LoginComponent},\n  {path: 'signup', component: SignupComponent},\n  {path: '', redirectTo: 'login', pathMatch: 'full'},\n  {path: 'dashboard', \n   loadChildren: () => import('./child-route/dashboard-routing.module').then(m => m.DashboardRoutingModule)\n  },\n  { path: 'expense',\n    loadChildren: () => import('./child-route/expense-routing.module').then(m => m.ExpenseRoutingModule)\n  },\n  {\n    path: 'profile',\n    loadChildren: () => import('./child-route/profile-routing.module').then(m => m.ProfileRoutingModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, ViewChild, AfterViewInit, HostListener } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport * as appReducer from './store/app.reducer';\nimport { AuthState } from './store/auth.reducer';\nimport { Observable } from 'rxjs';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { MatLegacyDialog as MatDialog } from '@angular/material/legacy-dialog';\nimport { FeedbackFormComponent } from './shared/feedback-form/feedback-form.component';\nimport { AuthService } from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'Expense Tracker';\n  @ViewChild('sidenav') sidenav: MatSidenav;\n  sidenavMode: string;\n\n  isAuthenticated$: Observable<boolean>;\n\n  constructor(private store: Store<AuthState>,\n              private matDialog: MatDialog,\n              private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.isAuthenticated$ = this.store.select(appReducer.getIsAuthenticated);\n    this.authService.autoLogin();\n  }\n\n  onToggle(): void {\n    if (this.sidenavMode === 'over'){\n      this.sidenav.toggle();\n    }\n  }\n\n  onSideNavLoad(): void {\n    if (window.innerWidth >= 960) {\n      this.sidenavMode = 'side';\n      this.sidenav.open();    }\n    else{\n      this.sidenavMode = 'over';\n    }\n  }\n\n  onResize(event): void {\n    if (event.target.innerWidth < 960) {\n      if (this.sidenav !== undefined) {\n        this.sidenav.close();\n        this.sidenavMode = 'over';\n      }\n    }\n    if (event.target.innerWidth >= 960) {\n      if (this.sidenav !== undefined) {\n        this.sidenav.open();\n        this.sidenavMode = 'side';\n      }\n    }\n  }\n\n  onClick(): void {\n    this.matDialog.open(FeedbackFormComponent);\n  }\n\n\n}\n","<div (window:resize)=\"onResize($event)\" style=\"display: flex; flex-direction: column;justify-content: space-between; height:100%\">\n    <app-header (toggleSideBar)=\"onToggle()\" ></app-header>\n    <section style=\"flex: 1 1 0\">\n        <mat-sidenav-container>\n            <mat-sidenav #sidenav [mode]=\"this.sidenavMode\" *ngIf=\"isAuthenticated$ | async\" role=\"navigation\">\n                <app-sidebar (sidenavClickEvent)=\"onToggle()\" (sidenavLoadEvent)=\"onSideNavLoad()\"></app-sidebar>\n            </mat-sidenav>\n            <mat-sidenav-content>\n                <router-outlet></router-outlet>\n            </mat-sidenav-content>\n        </mat-sidenav-container>\n    </section>\n    <mat-toolbar color='primary' class=\"position\">\n        <div class=\"flex-container\">\n            <button mat-button>\n                <mat-icon>copyright</mat-icon>\n                <span>Angular Apps 2020</span>\n            </button>\n            <div *ngIf=\"(this.isAuthenticated$ | async)\">\n                <button mat-button (click)=\"onClick()\">Feedback Form</button>\n            </div>\n        </div>\n    </mat-toolbar>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoginComponent } from './auth/login/login.component';\nimport { SignupComponent } from './auth/signup/signup.component';\nimport { HeaderComponent } from './navigation/header/header.component';\nimport { SidebarComponent } from './navigation/sidebar/sidebar.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ExpenseComponent } from './expense/expense.component';\nimport { EditExpenseComponent } from './expense/edit-expense/edit-expense.component';\nimport { NewExpenseComponent } from './expense/new-expense/new-expense.component';\nimport { MaterialModule } from './material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { StoreModule } from '@ngrx/store';\nimport { AuthReducer } from './store/auth.reducer';\nimport { DashboardRoutingModule } from './child-route/dashboard-routing.module';\nimport { ExpenseRoutingModule } from './child-route/expense-routing.module';\nimport { ProfileRoutingModule } from './child-route/profile-routing.module';\nimport { ExpenseReducer } from './store/expense.reducer';\nimport { ExpenseHistoryComponent } from './expense/expense-history/expense-history.component';\nimport { DialogComponent } from './shared/dialog/dialog.component';\nimport { ExpenseTableComponent } from './expense/expense-history/expense-table/expense-table.component';\nimport { ExpenseExpandPanelComponent } from './expense/expense-history/expense-expand-panel/expense-expand-panel.component';\nimport { DashboardReducer } from './store/dashboard.reducer';\nimport { MonthlyExpenseGraphComponent } from './dashboard/monthly-expense-graph/monthly-expense-graph.component';\nimport { YearlyExpenseGraphComponent } from './dashboard/yearly-expense-graph/yearly-expense-graph.component';\nimport { YearlyExpenseCategoryGraphComponent } from './dashboard/yearly-expense-category-graph/yearly-expense-category-graph.component';\nimport { ChartsModule } from 'ng2-charts';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { FeedbackFormComponent } from './shared/feedback-form/feedback-form.component';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { AnnualExpenseCategoryGraphComponent } from './dashboard/annual-expense-category-graph/annual-expense-category-graph.component';\nimport { LoadingComponent } from './shared/loading/loading.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthInterceptor } from './services/auth-interceptor';\nimport { ToastrModule } from 'ngx-toastr';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignupComponent,\n    HeaderComponent,\n    SidebarComponent,\n    DashboardComponent,\n    ExpenseComponent,\n    EditExpenseComponent,\n    NewExpenseComponent,\n    ExpenseHistoryComponent,\n    DialogComponent,\n    ExpenseTableComponent,\n    ExpenseExpandPanelComponent,\n    MonthlyExpenseGraphComponent,\n    YearlyExpenseGraphComponent,\n    YearlyExpenseCategoryGraphComponent,\n    FeedbackFormComponent,\n    AnnualExpenseCategoryGraphComponent,\n    LoadingComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule, \n    FormsModule,\n    ReactiveFormsModule,\n    StoreModule.forRoot({auth: AuthReducer, expense: ExpenseReducer, dashboard: DashboardReducer}),\n    DashboardRoutingModule,\n    ExpenseRoutingModule,\n    ProfileRoutingModule,\n    ChartsModule,\n    LayoutModule,\n    NgApexchartsModule,\n    HttpClientModule,\n    ToastrModule.forRoot({\n      timeOut: 3000,\n      positionClass: 'toast-top-right',\n      preventDuplicates: true,\n    })\n  ],\n  providers: [{provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { AuthState } from 'src/app/store/auth.reducer';\nimport * as appReducer from './../../store/app.reducer';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  @ViewChild('f', {static: false}) loginForm: NgForm;\n\n  constructor(private route: Router,\n              private authService: AuthService,\n              private store: Store<AuthState>) { }\n\n  isBufferOn$: Observable<boolean>;\n\n  ngOnInit(): void {\n    this.isBufferOn$ = this.store.select(appReducer.getIsBufferOn);\n  }\n\n  onSignUp() {\n    this.route.navigate([\"/signup\"]);\n  }\n\n  onSubmit() {\n    this.authService.login(this.loginForm.value.email, this.loginForm.value.password);\n  }\n\n  onClear() {\n    this.loginForm.reset();\n  }\n\n  onSigninWithFacebook() {\n    this.authService.signInWithFacebook();\n  }\n\n  onSigninWithGoogle() {\n    this.authService.signInWithGoogle();\n  }\n}\n","<div style=\"width: 100%; height: 100%; justify-content: center; align-items: center; column-gap: 20px;\">\n  <mat-card style=\"margin-right: 20px; max-width: 600px;\">\n    <mat-card-content>\n      <img src=\"./../assets/login_background.jpg\">\n    </mat-card-content>\n  </mat-card>\n  <mat-card class=\"mat-elevation-z8\" style=\"max-width: 500px; height: fit-content; justify-content: space-around; padding: 10px;\">\n    <mat-card-content>\n        <form #f=\"ngForm\" (ngSubmit)=\"onSubmit()\" class=\"layout-column\">\n            <mat-form-field>\n                <mat-label class=\"center\">Enter your email</mat-label>\n                <input type=\"email\" name=\"email\" matInput required email ngModel #email>\n                <mat-error *ngIf=\"!email.valid\">You must enter email</mat-error>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label class=\"center\">Enter password</mat-label>\n                <input type=\"password\" name=\"password\" matInput required ngModel #password>\n                <mat-error *ngIf=\"!password.valid\">You must enter password</mat-error>\n            </mat-form-field>\n            <div style=\"flex-direction: row;justify-content: space-between;\" >\n                <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"!f.valid\" class=\"login-button\">Login</button>\n                <button type=\"button\" mat-raised-button color=\"accent\" (click)=\"onClear()\" class=\"login-button\">Clear</button>\n            </div>\n            <mat-label class=\"center\" style=\"padding-bottom: 10px; padding-top: 10px;\">Don't have an account ?</mat-label>\n            <button type=\"button\" mat-raised-button color=\"primary\" (click)=\"onSignUp()\" style=\"width: 100%;\">Sign Up</button>\n            <div style=\"column-gap: 5px;justify-content: center;align-items: center;\">\n              <span style=\"width: fit-content;\">Sign in with :</span>\n              <button type=\"button\" mat-button style=\"flex:1 1 35%\" (click)=\"onSigninWithGoogle()\">\n                <img src=\"./../../../assets/btn_google_light_normal_ios.svg\" style=\"padding-right: 0px;\">\n                <span style=  \"font-size: 14px;\">Google</span>\n              </button>\n              <button type=\"button\" mat-button color=\"primary\" style=\"flex:1 1 35%;\" (click)=\"onSigninWithFacebook()\">\n                <mat-icon style=\"margin-right: 5px;\">facebook</mat-icon>\n                <span style= \"color: darkblue; font-size: 14px;\">Facebook</span>\n              </button>\n            </div>\n          </form>\n    </mat-card-content>\n    <mat-card-footer class=\"center\">\n      <mat-progress-bar mode=\"buffer\" *ngIf=\"(isBufferOn$ | async)\"></mat-progress-bar>\n    </mat-card-footer>\n</mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { UntypedFormGroup, UntypedFormControl, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { AuthService } from './../../services/auth.service';\nimport * as appReducer from './../../store/app.reducer';\nimport { AuthState } from 'src/app/store/auth.reducer';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  constructor(private authService: AuthService,\n              private store: Store<AuthState>) { }\n\n  isBufferOn$: Observable<boolean>;\n  signupForm: UntypedFormGroup;\n\n  ngOnInit(): void {\n    this.initForm();\n    this.isBufferOn$ = this.store.select(appReducer.getIsBufferOn);\n  }\n\n  initForm() {\n    this.signupForm = new UntypedFormGroup({\n      email: new UntypedFormControl('',[Validators.required, Validators.email]),\n      password: new UntypedFormControl('', [Validators.required, Validators.minLength(6)]),\n      confirmPassword: new UntypedFormControl('', Validators.required),\n      displayName: new UntypedFormControl('', Validators.required),\n      dob: new UntypedFormControl('', Validators.required),\n      tnc: new UntypedFormControl(false, Validators.required)\n    });\n  }\n\n  onClear() {\n    this.signupForm.reset();\n  }\n\n  onSubmit() {\n    this.authService.signup(this.signupForm.value);\n  }\n\n}\n","<section class=\"center\" style=\"height: 100%; width: 100%;align-items: center;\">\n    <mat-card style=\"margin-right: 20px;\">\n      <mat-card-content>\n        <img src=\"./../assets/signup_background.jpg\">\n      </mat-card-content>\n    </mat-card>\n    <mat-card class=\"mat-elevation-z8\" style=\"display: flex; width:400px; padding: 10px;\">\n        <mat-card-content>\n            <form [formGroup]=\"signupForm\" class=\"layout-column\" (ngSubmit)=\"onSubmit()\">\n                <mat-form-field>\n                    <mat-label >Display name</mat-label>\n                    <input type=\"text\" matInput formControlName=\"displayName\">\n                    <mat-error>You must enter your display name</mat-error>\n                </mat-form-field>\n                <mat-form-field>\n                    <mat-label >Enter your email</mat-label>\n                    <input type=\"email\" matInput formControlName=\"email\">\n                    <mat-error>You must enter your email</mat-error>\n                </mat-form-field>\n                <mat-form-field>\n                    <mat-label >Enter your password</mat-label>\n                    <input type=\"password\" matInput formControlName=\"password\">\n                    <mat-hint align=\"end\">{{ this.signupForm.value.password.length }}</mat-hint>\n                    <mat-error *ngIf=\"this.signupForm.value.password.length === 0\">You must enter your password</mat-error>\n                    <mat-error *ngIf=\"this.signupForm.value.password.length >0 && this.signupForm.value.password.length <= 6 \">Password must be of minimum 6 characters</mat-error>\n                </mat-form-field>\n                <mat-form-field>\n                    <mat-label >Confirm your password</mat-label>\n                    <input type=\"password\" matInput formControlName=\"confirmPassword\">\n                    <mat-hint align=\"end\">{{ this.signupForm.value.confirmPassword.length }}</mat-hint>\n                    <mat-error>You must confirm your password</mat-error>\n                </mat-form-field>\n                <mat-form-field color=\"accent\" appearance=\"fill\">\n                    <mat-label >Enter your Date of Birth</mat-label>\n                    <input matInput formControlName=\"dob\" [matDatepicker]=\"picker\">\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker color=\"primary\"></mat-datepicker>\n                    <mat-error>You must enter your date of birth</mat-error>\n                </mat-form-field>\n                <mat-checkbox before=\"true\" color=\"accent\" formControlName=\"tnc\">Accept Terms and Conditions</mat-checkbox>\n                <div class=\"center\" style=\"display:flex;justify-content: space-between; padding-top: 5px;\">\n                    <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"!signupForm.valid\" class=\"signup-button\">Sign Up</button>\n                    <button type=\"submit\" mat-raised-button color=\"accent\" (click)=\"onClear()\" class=\"signup-button\">Clear</button>\n                </div>\n            </form>\n        </mat-card-content>\n        <mat-card-footer class=\"center\">\n            <mat-progress-bar mode=\"buffer\" *ngIf=\"(isBufferOn$ | async)\"></mat-progress-bar>\n        </mat-card-footer>\n    </mat-card>\n</section>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from '../dashboard/dashboard.component';\nimport { AuthGuard } from '../services/auth-guard.service';\n\nconst dashboardRoute: Routes = [\n    {path: '', component: DashboardComponent, canActivate: [AuthGuard]}\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(dashboardRoute)],\n    exports: [RouterModule]\n})\nexport class DashboardRoutingModule {}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ExpenseComponent } from './../expense/expense.component';\nimport { NewExpenseComponent } from '../expense/new-expense/new-expense.component';\nimport { EditExpenseComponent } from '../expense/edit-expense/edit-expense.component';\nimport { AuthGuard } from '../services/auth-guard.service';\n\nconst expenseRoutes: Routes = [\n    {path: '', component: ExpenseComponent, children:[\n        {path: 'new', component: NewExpenseComponent},\n        {path: 'edit/:id', component: EditExpenseComponent}\n    ] , canActivate: [AuthGuard]}\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(expenseRoutes)],\n    exports: [RouterModule]\n})\nexport class ExpenseRoutingModule {}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProfileComponent } from '../profile/profile.component';\nimport { AuthGuard } from '../services/auth-guard.service';\n\nconst profileRoutes: Routes = [\n  {path: '', component: ProfileComponent, canActivate: [AuthGuard]}\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(profileRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class ProfileRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-annual-expense-category-graph',\n  templateUrl: './annual-expense-category-graph.component.html',\n  styleUrls: ['./annual-expense-category-graph.component.css']\n})\nexport class AnnualExpenseCategoryGraphComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>annual-expense-category-graph works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { map, take } from 'rxjs/operators';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport * as dashboardActions from './../store/dashboard.action';\nimport * as appReducer from './../store/app.reducer';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { DashboardService } from '../services/dashboard.service';\nimport { CategoryExpense, DashboardState } from '../store/dashboard.reducer';\nimport { Category, ExpenseState } from '../store/expense.reducer';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  today: number;\n  currentYear = (new Date()).getFullYear();\n  currentMonth$: Observable<string>;\n  isDataUpdateInProgress$: Observable<boolean>;\n  isDataFetchComplete$: Observable<boolean>;\n\n  annualCategoryExpenseDetail$: Observable<{expense: number, monthName: string}[]>;\n  lastSixMonthExpenseDetail$: Observable<{sixMonthExpenseSummary: number[], \n                                          categorySummary: number[],\n                                          sixMonthTotalExpense: number}>;\n  previousMonthExpense$: Observable<number>;\n  currentMonthExpense$: Observable<number>;\n  currentYearExpense$: Observable<number>;\n  previousYearExpense$: Observable<number>;\n  percentageIncreaseMom$: Observable<number>;\n  percentageIncreaseYoy$: Observable<number>;\n  trendingExpenseData$: Observable<CategoryExpense[]>;\n  months: string[]; \n  lastAnnualExpense: number[];\n  categories$: Observable<Category[]>;\n  categorySummary$: Observable<number[]>;\n  allMonths$: Observable<string[]>;\n\n  /** Based on the screen size, switch from standard to one column per row */\n  cardLayout = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return {\n          gridCol: 1,\n          smallCard: {row: 1, col: 1},\n          wideCard: {row: 1.5, col: 1}, \n          mediumCard: {row: 1, col: 1},\n          rowheight: '200px'\n        };\n      }\n      else {\n        return {\n          gridCol: 4,\n          smallCard: {row: 1, col: 1},\n          wideCard: {row: 1.5, col: 4}, \n          mediumCard: {row: 2, col: 2},\n          rowheight: '200px'\n        };\n      }\n    })\n  );\n\n  constructor(private breakpointObserver: BreakpointObserver,\n              private dashboardService: DashboardService,\n              private store: Store<DashboardState>,\n              private iconRegistry: MatIconRegistry,\n              private sanitizer: DomSanitizer) {\n    this.iconRegistry.addSvgIcon('money',this.sanitizer.bypassSecurityTrustResourceUrl('/assets/rupee-svgrepo-com.svg'));\n    this.iconRegistry.addSvgIcon('graph',this.sanitizer.bypassSecurityTrustResourceUrl('/assets/line-graph-part-2-svgrepo-com.svg'));\n  }\n\n  ngOnInit(): void {\n    this.today = (new Date()).getMonth();\n    this.currentMonth$ = this.dashboardService.getCurrentMonth();\n\n    // this.store.dispatch(new dashboardActions.StartAnnualExpenseGraphLoading);\n    // this.store.dispatch(new dashboardActions.StartCategoryExpenseGraphLoading);\n\n    this.isDataUpdateInProgress$ = this.store.select(appReducer.getIsDataUpdateInProgress);\n\n    this.allMonths$ = this.dashboardService.getAllMonths();\n    // this.trendingExpenseData$ = this.dashboardService.getTrendingExpenses();\n  }\n\n  ngAfterViewInit() {\n\n    this.currentMonthExpense$ = this.store.select(appReducer.getCurrentMonthExpense);\n    this.previousMonthExpense$ = this.store.select(appReducer.getPreviousMonthExpense);\n    this.currentYearExpense$ = this.store.select(appReducer.getCurrentYearExpense);\n    this.previousYearExpense$ = this.store.select(appReducer.getPreviousYearExpense);\n    this.previousMonthExpense$ = this.store.select(appReducer.getPreviousMonthExpense);\n    this.percentageIncreaseMom$ = this.store.select(appReducer.getExpenseMonthonMonth);\n    this.percentageIncreaseYoy$ = this.store.select(appReducer.getExpenseYearonYear);\n    this.trendingExpenseData$ = this.store.select(appReducer.getTrendingExpenses);\n    this.categories$ = this.store.select(appReducer.getCategories);\n  }\n\n  onMonthChange(data) {\n    const date = '01-' + data + '-'+ (new Date().getFullYear());\n    const startDate = new Date(new Date().getFullYear(), new Date(date).getMonth(), 1);\n    const endDate = new Date(new Date().getFullYear(), new Date(date).getMonth() + 1, 0);\n    // const monthExpenseDetail$ = this.dashboardService.calculateExpenseDataByDate(startDate, endDate);\n    // this.dashboardService.monthlyExpenseChangeEvent.next(monthExpenseDetail$);\n  }\n\n  onChange(data) {\n    // this.dashboardService.getCategorySummary(data);\n  }\n}\n","<div *ngIf=\"(isDataUpdateInProgress$ | async)\">\n  <app-loading></app-loading>\n</div>\n<div class=\"grid-container\" *ngIf=\"!(isDataUpdateInProgress$ | async)\">\n  <mat-grid-list [cols]=\"(cardLayout |async).gridCol\" [rowHeight]=\"(cardLayout | async).rowheight\">\n    <mat-grid-tile [colspan]=\"(cardLayout|async).smallCard.col\" [rowspan]=\"(cardLayout|async).smallCard.row\">\n      <mat-card class=\"dashboard-card mat-elevation-z4 gradient-background\">\n        <mat-card-title></mat-card-title>\n        <mat-card-content>\n          <div class=\"flex-container\">\n            <div class=\"flex-child\">\n              <div style=\"color: white; font-size: 1.5em; margin-bottom: 10px;\">{{this.currentMonth$ | async}}</div>\n              <span style=\"color:white; font-size: 1.5em;font-weight: bold; margin-top: 10px;\">{{(currentMonthExpense$ | async) | currency:'INR'}}</span>\n              <div class=\"flex-container\">\n                <span style=\"color:white; margin-top: 10px;display:flex;\">\n                  <span style=\"color:white\">{{(percentageIncreaseMom$ | async) | number | number : '1.2-2'}}%</span>\n                  <mat-icon color=\"warn\" style=\"padding: 0;margin:0;\"\n                    *ngIf=\"(currentMonthExpense$ | async) !== 0 && ((currentMonthExpense$ | async) > (previousMonthExpense$ | async))\">\n                    arrow_drop_up</mat-icon>\n                  <mat-icon style=\"color:white; padding: 0;margin:0;\"\n                    *ngIf=\"(currentMonthExpense$ | async) !== 0 && ((currentMonthExpense$ | async) < (previousMonthExpense$ | async))\">\n                    arrow_drop_down</mat-icon>\n                </span>\n              </div>\n            </div>\n            <div class=\"flex-child\">\n              <mat-icon *ngIf=\"(currentMonthExpense$ | async) !== 0\" style=\"height: fit-content; width: fit-content; padding:10px\" svgIcon=\"money\"></mat-icon>\n            </div>\n          </div>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile [colspan]=\"(cardLayout|async).smallCard.col\" [rowspan]=\"(cardLayout|async).smallCard.row\">\n      <mat-card class=\"dashboard-card mat-elevation-z4 gradient-background\">\n        <mat-card-title></mat-card-title>\n        <mat-card-content>\n          <div class=\"flex-container\">\n            <div class=\"flex-child\">\n              <div style=\"color: white; font-size: 1.5em; padding-bottom: 10px;\">{{currentYear}}</div>\n              <span style=\"color:white; font-size: 1.5em;font-weight: bold; margin-top: 10px;\">{{((currentYearExpense$ | async)) | currency:'INR'}}</span>\n              <span style=\"color:white; margin-top: 10px;\" class=\"flex-container\">\n                <span style=\"color: white;\" *ngIf=\"(previousYearExpense$ | async) != 0\">{{(((currentYearExpense$ | async))/((previousYearExpense$ | async))* 100) | number | number : '1.2-2'}}% of {{currentYear-1}}</span>\n              </span>\n              <span style=\"color:white; margin-top: 10px;\" class=\"flex-container\">\n                <span style=\"color: white;\">{{(percentageIncreaseYoy$ | async) | number | number : '1.2-2'}}%</span>\n                <mat-icon color=\"warn\" style=\"padding: 0;margin:0;\"\n                  *ngIf=\"(percentageIncreaseYoy$ | async) > 0\">\n                  arrow_drop_up</mat-icon>\n                <mat-icon style=\"color:white; padding: 0;margin:0;\"\n                  *ngIf=\"(percentageIncreaseYoy$ | async) < 0\">\n                  arrow_drop_down</mat-icon>\n              </span>\n            </div>\n            <div class=\"flex-child\">\n              <mat-icon style=\"padding: 10px; width:fit-content; height:fit-content\" svgIcon=\"graph\"></mat-icon>\n            </div>\n          </div>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile [colspan]=\"(cardLayout|async).smallCard.col\" [rowspan]=\"(cardLayout|async).smallCard.row\">\n      <mat-card class=\"dashboard-card mat-elevation-z4 gradient-background\">\n        <mat-card-title></mat-card-title>\n        <mat-card-content>\n          <div class=\"flex-column-container\">\n            <div style=\"color: white; font-size: 1.5em; padding-bottom: 20px;\">Trending expenses</div>\n            <div style=\"display: flex; color: white;\" *ngFor=\"let expense of (trendingExpenseData$ | async)\">\n              <span style=\"display: flex;flex-basis: 50%;\">{{expense.category}}</span>\n              <span style=\"display: flex;flex-basis: 5%;\">-</span>\n              <span style=\"display: flex;flex-basis: 45%;\">{{expense.expense | currency: 'INR'}}</span>\n            </div>\n          </div>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile [colspan]=\"(cardLayout|async).smallCard.col\" [rowspan]=\"(cardLayout|async).smallCard.row\">\n      <mat-card class=\"dashboard-card mat-elevation-z4 gradient-background\">\n        <mat-card-title></mat-card-title>\n        <mat-card-content>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n  <mat-grid-list [cols]=\"(cardLayout |async).gridCol\" [rowHeight]=\"(cardLayout | async).rowheight\">\n    <mat-grid-tile [colspan]=\"(cardLayout |async).wideCard.col\" [rowspan]=\"(cardLayout |async).wideCard.row\">\n      <mat-card class=\"dashboard-card mat-elevation-z4\">\n        <mat-card-content>\n          <div>\n            <app-yearly-expense-graph></app-yearly-expense-graph>\n          </div>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n  <mat-grid-list [cols]=\"(cardLayout |async).gridCol\" [rowHeight]=\"(cardLayout | async).rowheight\">\n    <mat-grid-tile  [colspan]=\"(cardLayout |async).wideCard.col\" [rowspan]=\"(cardLayout |async).wideCard.row\">\n      <mat-card class=\"dashboard-card mat-elevation-z4\">\n        <mat-card-content>\n          <app-yearly-expense-category-graph>\n          </app-yearly-expense-category-graph>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { UtilService } from './../../services/util.service';\nimport { ChartType, ChartOptions } from 'chart.js';\nimport { Observable, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { DashboardService } from 'src/app/services/dashboard.service';\n\n\n@Component({\n  selector: 'app-monthly-expense-graph',\n  templateUrl: './monthly-expense-graph.component.html',\n  styleUrls: ['./monthly-expense-graph.component.css']\n})\nexport class MonthlyExpenseGraphComponent implements OnInit, OnDestroy {\n\n  graphData: number[] = [];\n  columnLabels: string[] = [];\n  monthlyExpenseDetailSubscription: Subscription;\n  @Input() monthlyExpenseDetail$: Observable<{categories: string[],\n                                             monthlyCategoryExpense: number[],\n                                             totalMonthlyExpense: number}>;\n  public chartColors = [{\n    backgroundColor: []\n    }];\n  // @Input() legendPosition: string;\n  isNoData = false;\n  chartType: ChartType = 'doughnut';\n  chartLegend = true;\n  public chartOptions: ChartOptions = {\n    responsive: true,\n    legend: {\n      // position: 'chartArea',\n      position: 'bottom',\n      labels: {\n        usePointStyle: true\n      }\n    }\n  };\n\n\n  constructor(private utilService: UtilService,\n              private dashboardService: DashboardService) {}\n\n  ngOnDestroy() {\n    this.monthlyExpenseDetailSubscription.unsubscribe();\n  }\n\n  ngOnInit(): void {\n    if (this.graphData.length === 0) {\n      this.isNoData = true;\n    }\n    this.monthlyExpenseDetail$\n    .pipe(take(1))\n    .subscribe(\n      (data) => {\n        this.graphData = [... data.monthlyCategoryExpense];\n        this.columnLabels = [... data.categories];\n        if (this.graphData.length != 0) {\n          this.isNoData = false;\n        }\n        this.graphData.map(\n          () => {\n            this.chartColors[0].backgroundColor.push(this.utilService.getRandomColor());\n          }\n        )\n      }\n    );\n    this.monthlyExpenseDetailSubscription = this.dashboardService.monthlyExpenseChangeEvent\n    .subscribe(\n      monthlyExpenseDetail => {\n        monthlyExpenseDetail\n        .pipe(take(1))\n        .subscribe(\n          data => {\n            this.graphData = [... data.monthlyCategoryExpense];\n            this.columnLabels = [... data.categories];\n            if (this.graphData.length != 0) {\n              this.isNoData = false;\n            }\n            else {\n              this.isNoData = true;\n            }\n            this.graphData.map(\n              () => {\n                this.chartColors[0].backgroundColor.push(this.utilService.getRandomColor());\n              }\n            )\n          }\n        );\n      }\n    );\n   }\n\n}\n","<div>\n    <div>\n      <h2 style=\"color: darkblue;\" *ngIf=\"this.isNoData\">No Data</h2>\n    </div>\n    <canvas *ngIf=\"!this.isNoData\" baseChart\n    [data]=\"graphData\"\n    [labels]=\"columnLabels\"\n    [chartType]=\"chartType\"\n    [options]=\"chartOptions\"\n    [colors]=\"chartColors\"\n    [legend]=\"chartLegend\"></canvas>\n</div>\n","import { Component, OnInit, Input, OnDestroy, ViewChild } from '@angular/core';\n// import { Label } from 'ng2-charts';\n// import { ChartType, ChartDataSets, ChartOptions } from 'chart.js';\nimport { Observable, Subscription } from 'rxjs';\nimport { DashboardService } from 'src/app/services/dashboard.service';\nimport * as appReducer from './../../store/app.reducer';\nimport {\n  ApexAxisChartSeries,\n  ApexChart,\n  ChartComponent,\n  ApexDataLabels,\n  ApexPlotOptions,\n  ApexYAxis,\n  ApexTitleSubtitle,\n  ApexXAxis,\n  ApexFill\n} from \"ng-apexcharts\";\nimport { Store } from '@ngrx/store';\nimport { Category, ExpenseState } from 'src/app/store/expense.reducer';\nimport { take } from 'rxjs/operators';\n\nexport type ChartOptions = {\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  dataLabels: ApexDataLabels;\n  plotOptions: ApexPlotOptions;\n  yaxis: ApexYAxis;\n  xaxis: ApexXAxis;\n  fill: ApexFill;\n  title: ApexTitleSubtitle;\n};\n\n@Component({\n  selector: 'app-yearly-expense-category-graph',\n  templateUrl: './yearly-expense-category-graph.component.html',\n  styleUrls: ['./yearly-expense-category-graph.component.css']\n})\nexport class YearlyExpenseCategoryGraphComponent implements OnInit, OnDestroy {\n\n  monthName: string[] = [];\n  expense: number[] = [];\n  years$: Observable<String[]>;\n  // categorySummarySubscription: Subscription;\n  // categorySummaryInitSubscription: Subscription;\n  // chartLabelSubscription: Subscription;\n\n  @ViewChild(\"chart\") chart: ChartComponent;\n  chartOptions: Partial<ChartOptions>;\n  series: ApexAxisChartSeries;\n  // categories$: Observable<Category[]>;\n  categories: Category[];\n  \n  constructor(private dashboardService: DashboardService,\n              private expenseStore: Store<ExpenseState>) { \n    this.dashboardService.getAnnualExpenseDetailByCategory('Vegetables').subscribe(\n      (expenseDetail) => {\n        expenseDetail.map(\n          (expense) => {\n            this.monthName.push(expense.month);\n            this.expense.push(expense.amount);\n          }\n        );\n        this.series = [\n          {\n            name: \"Expense\",\n            data: [...this.expense]\n          }];\n        this.chartOptions = {\n          chart: {\n            height: 350,\n            type: \"bar\"\n          },\n          plotOptions: {\n            bar: {\n              dataLabels: {\n                position: \"top\" // top, center, bottom\n              }\n            }\n          },\n          dataLabels: {\n            enabled: true,\n            offsetY: -20,\n            style: {\n              fontSize: \"12px\",\n              colors: [\"#304758\"]\n            }\n          },\n    \n          xaxis: {\n            categories: [...this.monthName],\n            position: \"top\",\n            labels: {\n              offsetY: -18\n            },\n            axisBorder: {\n              show: false\n            },\n            axisTicks: {\n              show: false\n            },\n            crosshairs: {\n              fill: {\n                type: \"gradient\",\n                gradient: {\n                  colorFrom: \"#D8E3F0\",\n                  colorTo: \"#BED1E6\",\n                  stops: [0, 100],\n                  opacityFrom: 0.4,\n                  opacityTo: 0.5\n                }\n              }\n            },\n            tooltip: {\n              enabled: true,\n              offsetY: -35\n            }\n          },\n          fill: {\n            type: \"gradient\",\n            gradient: {\n              shade: \"light\",\n              type: \"vertical\",\n              shadeIntensity: 0.25,\n              gradientToColors: undefined,\n              inverseColors: true,\n              opacityFrom: 1,\n              opacityTo: 1,\n              stops: [50, 0, 100, 100]\n            }\n          },\n          yaxis: {\n            axisBorder: {\n              show: false\n            },\n            axisTicks: {\n              show: true\n            },\n            labels: {\n              show: true\n            }\n          },\n          title: {\n            text: 'Category Analysis',\n            offsetY: -40\n          }\n        };\n      }\n    );\n}\n\n  ngOnInit(): void {\n    // this.categories$ = this.expenseStore.select(appReducer.getCategory);\n    // this.years$ = this.dashboardService.getYears();\n    this.dashboardService.getCategories()\n    .pipe(take(1))\n    .subscribe(\n      categories => this.categories = categories\n    )\n  }\n\n  ngOnDestroy() {\n    // this.categorySummaryInitSubscription.unsubscribe();\n    // this.chartLabelSubscription.unsubscribe();\n    // this.categorySummarySubscription.unsubscribe();\n  }\n\n  onCategoryChange(data) {\n    this.dashboardService.getAnnualExpenseDetailByCategory(data).subscribe(\n      expenseDetail => {\n        this.monthName = [];\n        this.expense = [];\n        expenseDetail.map(\n          expense => {\n            this.monthName.push(expense.month);\n            this.expense.push(expense.amount);\n          }\n        )\n        this.series[0].data = [...this.expense];\n        this.chart.updateSeries(this.series);\n      }\n    );\n    // this.dashboardService.getAnnualExpenseDetailByCategory(data).subscribe(\n    //   (expenseDetail) => {\n    //     this.monthName = [];\n    //     this.expense = [];\n    //     expenseDetail.map(\n    //       (expense) => {\n    //         this.monthName.push(expense.month);\n    //         this.expense.push(expense.amount);\n            \n    //       }\n    //     );\n    //     this.series[0].data = [...this.expense];\n    //     this.chart.updateSeries(this.series);\n    //   }\n    // );\n    // this.years$ = this.dashboardService.getYears();\n  }\n\n  onYearChange(data) {}\n\n}\n","<div class=\"flex-container\">\n  <h4  style=\"justify-content: flex-start end; flex-basis: 50%; row-gap: 10px; color: darkblue; padding: 0px; margin: 0px;\">Category Analysis</h4>\n  <div style=\"display:flex; justify-content: flex-end; flex-basis:50%; flex-wrap: nowrap; row-gap: 10px;\">\n    <div>\n      <label style=\"color: darkblue; margin-right: 15px;\">Category</label>\n      <select name=\"category\" id=\"category\" (change)=\"onCategoryChange($event.target.value)\">\n        <option [value]=category.Name *ngFor=\"let category of categories\">{{category.Name}}</option>\n      </select>\n    </div>\n    <div>\n      <label style=\"color: darkblue; margin-right: 15px;\">Years</label>\n      <select name=\"year\" id=\"year\" (change)=\"onYearChange($event.target.value)\">\n        <option [value]=year *ngFor=\"let year of (years$ | async)\">{{year}}</option>\n      </select>\n    </div>\n  </div>\n</div>\n<div>\n  <div *ngIf=\"series != undefined\">\n    <apx-chart\n      [series]=\"series\"\n      [chart]=\"chartOptions.chart\"\n      [dataLabels]=\"chartOptions.dataLabels\"\n      [plotOptions]=\"chartOptions.plotOptions\"\n      [yaxis]=\"chartOptions.yaxis\"\n      [xaxis]=\"chartOptions.xaxis\"\n      [fill]=\"chartOptions.fill\"\n      [title]=\"chartOptions.title\"\n      #chart\n    ></apx-chart>\n  </div>\n</div>","import { Component, OnInit, Input, OnDestroy, ViewChild, OnChanges, SimpleChanges } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { DashboardService } from 'src/app/services/dashboard.service';\nimport { ChartComponent, ApexAxisChartSeries, ApexChart, ApexXAxis, ApexDataLabels,\n   ApexTitleSubtitle, ApexStroke, ApexGrid, ApexFill, ApexMarkers, ApexYAxis } from \"ng-apexcharts\";\nimport { switchMap, take } from 'rxjs/operators';\n\nexport type ChartOptions = {\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  xaxis: ApexXAxis;\n  dataLabels: ApexDataLabels;\n  grid: ApexGrid;\n  fill: ApexFill;\n  markers: ApexMarkers;\n  yaxis: ApexYAxis;\n  stroke: ApexStroke;\n  title: ApexTitleSubtitle;\n};\n\n@Component({\n  selector: 'app-yearly-expense-graph',\n  templateUrl: './yearly-expense-graph.component.html',\n  styleUrls: ['./yearly-expense-graph.component.css']\n})\nexport class YearlyExpenseGraphComponent implements OnInit {\n  \n  annualExpense: number[] = [];\n  months: string[] = [];\n  public chartOptions: Partial<ChartOptions>;\n\n  lineChartLabels$: Observable<string>;\n  chartDataSubscription: Subscription;\n \n  constructor(private dashboardService: DashboardService) {}\n\n\n  \n  ngOnInit(): void {\n    this.dashboardService.getAnnualExpenseDetail()\n    .pipe(take(1))\n    .subscribe(\n      data => {\n        data.forEach(element => {\n          this.annualExpense.push(element.amount);\n          this.months.push(element.month);\n        });\n        this.chartOptions = {\n          series: [\n            {\n              name: \"Amount\",\n              data: [...this.annualExpense]\n            }\n          ],\n          chart: {\n            height: 350,\n            type: \"line\"\n          },\n          stroke: {\n            width: 7,\n            curve: \"smooth\"\n          },\n          xaxis: {\n            type: \"category\",\n            categories: [...this.months]\n          },\n          title: {\n            text: \"Last 12 Months Expense Detail\",\n            align: \"left\",\n            style: {\n              fontSize: \"16px\",\n              color: \"#666\"\n            }\n          },\n          fill: {\n            type: \"gradient\",\n            gradient: {\n              shade: \"dark\",\n              gradientToColors: [\"#FDD835\"],\n              shadeIntensity: 1,\n              type: \"horizontal\",\n              opacityFrom: 1,\n              opacityTo: 1,\n              stops: [0, 100, 100, 100]\n            }\n          },\n          markers: {\n            size: 4,\n            colors: [\"#FFA41B\"],\n            strokeColors: \"#fff\",\n            strokeWidth: 2,\n            hover: {\n              size: 7\n            }\n          },\n          yaxis: {\n            min: Math.min(...this.annualExpense),\n            max: Math.max(...this.annualExpense)\n            ,\n            title: {\n              text: \"Expense Amount\"\n            }\n          }\n        };\n      }\n    )\n    \n  }\n\n  ngAfterContentInit() {}\n\n}\n","<div id=\"chart\">\n  <apx-chart\n    [series]=\"chartOptions.series\"\n    [chart]=\"chartOptions.chart\"\n    [xaxis]=\"chartOptions.xaxis\"\n    [dataLabels]=\"chartOptions.dataLabels\"\n    [grid]=\"chartOptions.grid\"\n    [stroke]=\"chartOptions.stroke\"\n    [title]=\"chartOptions.title\"\n    [markers]=\"chartOptions.markers\"\n    [yaxis]=\"chartOptions.yaxis\"\n    [fill]=\"chartOptions.fill\"\n  ></apx-chart>\n</div>","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { Category, ExpenseState, ExpenseHistory } from 'src/app/store/expense.reducer';\nimport { Store } from '@ngrx/store';\nimport * as appReducer from './../../store/app.reducer';\nimport { NgForm } from '@angular/forms';\nimport { ExpenseService } from 'src/app/services/expense.service';\nimport * as expenseActions from './../../store/expense.action';\n\n@Component({\n  selector: 'app-edit-expense',\n  templateUrl: './edit-expense.component.html',\n  styleUrls: ['./edit-expense.component.css']\n})\nexport class EditExpenseComponent implements OnInit {\n\n  categories$: Observable<Category[]>;\n  expense$: Observable<ExpenseHistory>;\n\n  @ViewChild('f') editForm: NgForm;\n\n  constructor(private store: Store<ExpenseHistory>,\n              private expenseService: ExpenseService) { }\n\n  ngOnInit(): void {\n    this.categories$ = this.store.select(appReducer.getCategories);\n    this.expense$ = this.store.select(appReducer.getEditElement);\n  }\n\n  onSave() {\n    let expenseId = '';\n    this.expense$.subscribe(\n      expense => expenseId = expense.id\n    );\n    this.expenseService.updateExpense({id: expenseId, \n                                       userId: this.editForm.value.userId,\n                                       itemName: this.editForm.value.ItemName,\n                                       price: this.editForm.value.Price,\n                                       category: this.editForm.value.Category,\n                                       comment: this.editForm.value.Comment,\n                                       purchaseDate: this.editForm.value.PurchaseDate,\n                                       edited: true});\n    this.expenseService.expenseTabSelect.next(0);\n  }\n\n  onCancel() {\n    this.expenseService.expenseTabSelect.next(0);\n    this.store.dispatch(new expenseActions.SetEditModeOff);\n  }\n}\n","<form #f=\"ngForm\" (ngSubmit)=\"onSave()\">\n    <div class=\"flex col-gap-5\">\n        <button mat-raised-button type=\"submit\" color=\"primary\" class=\"margin\" [disabled]=\"!f.dirty\">Update</button>\n        <button mat-raised-button type=\"button\" color=\"accent\" class=\"margin\" (click)=\"onCancel()\">Cancel</button>\n    </div>\n    <mat-card class=\"mat-elevation-z8 margin\">\n        <mat-form-field>\n            <mat-label>Item Name</mat-label>\n            <input type=\"text\" matInput [ngModel]= \"(expense$ | async).itemName\" name=\"ItemName\">\n        </mat-form-field>\n        <mat-form-field>\n            <mat-label>Price</mat-label>\n            <input type=\"number\" matInput [ngModel]= \"(expense$ | async).price\" name=\"Price\">\n        </mat-form-field>\n        <mat-form-field>\n            <mat-select [ngModel]= \"(expense$ | async).category\" name=\"Category\">\n                <mat-option *ngFor=\"let category of (categories$ | async)\" [value]=\"category.Name\">{{ category.Name }}</mat-option>\n            </mat-select>\n            <mat-error>You must select category</mat-error>\n        </mat-form-field>\n        <mat-form-field color=\"accent\" appearance=\"fill\">\n            <mat-label>Enter date of purchase</mat-label>\n            <input matInput [ngModel]= \"(expense$ | async).purchaseDate\"  name=\"PurchaseDate\" [matDatepicker]=\"picker\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker color=\"primary\"></mat-datepicker>\n            <mat-error>You must enter date of purchase</mat-error>\n        </mat-form-field>\n        <mat-card-footer style=\"display: flex; flex-direction:column\">\n            <mat-form-field class=\"margin\">\n                <mat-label>Leave a comment</mat-label>\n                <textarea matInput [ngModel]= \"(expense$ | async).comment\" name=\"Comment\"></textarea>\n            </mat-form-field>\n        </mat-card-footer>\n    </mat-card>\n</form>","import { Component, OnInit, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ExpenseHistory, ExpenseState } from 'src/app/store/expense.reducer';\nimport { MatLegacyDialog as MatDialog } from '@angular/material/legacy-dialog';\nimport { Store } from '@ngrx/store';\nimport { ExpenseService } from 'src/app/services/expense.service';\nimport { DialogComponent } from 'src/app/shared/dialog/dialog.component';\nimport * as expenseActions from './../../../store/expense.action';\nimport { MatLegacyTableDataSource as MatTableDataSource } from '@angular/material/legacy-table';\n\n@Component({\n  selector: 'app-expense-expand-panel',\n  templateUrl: './expense-expand-panel.component.html',\n  styleUrls: ['./expense-expand-panel.component.css']\n})\nexport class ExpenseExpandPanelComponent implements OnInit {\n\n  @Input() displayedColumn$: Observable<string[]>;\n  @Input() datasource  = new MatTableDataSource<ExpenseHistory>();;\n\n  constructor(private expenseService: ExpenseService,\n              private store: Store<ExpenseState>,\n              private matDialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n  confirmDelete(expenseId: string) {\n    const dialogRef = this.matDialog.open(DialogComponent, { data: { dialogType: 1 } });\n    dialogRef.afterClosed().subscribe(\n      result => {\n        if (result) {\n          this.expenseService.deleteExpense(expenseId);\n        }\n      }\n    );\n  }\n\n  openComment(expenseComment: string) {\n    const dialogRef = this.matDialog.open(DialogComponent, { data: { dialogType: 2, comment: expenseComment } });\n  }\n\n  onEdit(element: ExpenseHistory) {\n    this.store.dispatch(new expenseActions.SetEditModeOn);\n    this.store.dispatch(new expenseActions.SetEditExpenseElement(element));\n    this.expenseService.expenseTabSelect.next(2);\n  }\n\n}\n","<mat-accordion *ngFor=\"let element of datasource.data\">\n    <mat-expansion-panel>\n        <mat-expansion-panel-header>\n            <mat-panel-title>{{ element.ItemName }} - {{element.PurchaseDate | date: 'MMMM-d'}}</mat-panel-title>\n        </mat-expansion-panel-header>\n        <mat-form-field>\n            <mat-label>Item Name</mat-label>\n            <input matInput type=\"text\" [value]=element.ItemName disabled>\n        </mat-form-field>\n        <!-- <mat-form-field>\n            <mat-label>Purchase Date</mat-label>\n            <input matInput type=\"text\" [value]=element.PurchaseDate.toDateString() disabled>\n        </mat-form-field> -->\n        <mat-form-field>\n            <mat-label>Price</mat-label>\n            <input matInput type=\"text\" [value]=element.Price disabled>\n        </mat-form-field>\n        <mat-form-field>\n            <mat-label>Category</mat-label>\n            <input matInput type=\"text\" [value]=element.Category disabled>\n        </mat-form-field>\n        <mat-form-field *ngIf=\"element.Comment != ''\">\n            <mat-label>Comment</mat-label>\n            <textarea matInput type=\"text\" [value]=element.Comment disabled></textarea>\n        </mat-form-field>\n        <p>\n            <mat-hint *ngIf=\"element.isEdited == true\">* Item has been edited</mat-hint>\n        </p>\n    </mat-expansion-panel>\n</mat-accordion>\n\n","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { ExpenseService } from 'src/app/services/expense.service';\nimport { ExpenseHistory, ExpenseState } from 'src/app/store/expense.reducer';\nimport * as appReducer from './../../store/app.reducer';\nimport { Observable, Subscription } from 'rxjs';\nimport { MatLegacyTableDataSource as MatTableDataSource, MatLegacyTable as MatTable } from '@angular/material/legacy-table';\nimport * as expenseActions from './../../store/expense.action';\nimport { NgForm } from '@angular/forms';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-expense-history',\n  templateUrl: './expense-history.component.html',\n  styleUrls: ['./expense-history.component.css'],\n})\nexport class ExpenseHistoryComponent implements AfterViewInit, OnInit {\n\n  @ViewChild('searchForm') searchForm: NgForm;\n  @ViewChild('expenseTable') expenseTable: MatTable<any>;\n\n  isLoading$: Observable<boolean>;\n  displayedColumn$: Observable<string[]>;\n  startDate: Date;\n  endDate: Date;\n  datasource = new MatTableDataSource<ExpenseHistory>();\n  subscription: Subscription;\n  filterStartDate: Date;\n  filterEndDate: Date;\n\n  constructor(private expenseService: ExpenseService,\n    private store: Store<ExpenseState>) {\n      this.store.dispatch(new expenseActions.SetLoadingOn);\n  }\n\n  ngOnInit(): void {\n    this.startDate = new Date((new Date()).getFullYear(), (new Date()).getMonth(), 1);\n    this.endDate = new Date((new Date()).getFullYear(), (new Date()).getMonth() + 1, 0);\n    this.isLoading$ = this.store.select(appReducer.getExpenseLoading);\n    this.displayedColumn$ = this.store.select(appReducer.getDisplayedColumns);\n    // Below subscription need to be unsubscribed else will be too many subscription\n    this.store.select(appReducer.getExpenses)\n    .subscribe(\n      data => this.datasource.data = [...data]\n    )\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => this.filterData(), 0);\n    this.searchForm.valueChanges.subscribe(\n      result => {\n        this.filterStartDate = this.searchForm.value.endDate;\n        this.filterEndDate = this.searchForm.value.startDate;\n      }\n    );\n  }\n\n  // ngAfterContentInit() {\n  //   // console.log('ngDoCheck');\n  //   this.store.select(appReducer.getExpenses)\n  //   .subscribe(\n  //     data => this.datasource.data = [...data]\n  //   )\n  // }\n\n\n  filterData() {\n    let startDate: Date;\n    let endDate: Date;\n    if (this.searchForm !== undefined) {\n      startDate = this.searchForm.value.startDate === undefined ? this.startDate : this.searchForm.value.startDate;\n      endDate = this.searchForm.value.endDate === undefined ? this.endDate : this.searchForm.value.endDate;\n    }\n    else {\n      startDate = this.startDate;\n      endDate = this.endDate;\n    }\n    this.store.dispatch(new expenseActions.SetSearchDate(startDate, endDate));\n    this.expenseService.refreshExpenses();\n  }\n}\n","<div style=\"display: flex; flex-direction: column;flex: 1 1 100%;\">\n    <section class=\"margin\">\n        <form #searchForm=\"ngForm\" (ngSubmit)=\"filterData()\" style=\"display: flex; flex-direction: row; column-gap: 10px;\">\n            <mat-form-field color=\"accent\" appearance=\"fill\" class=\"height\">\n                <mat-label>From</mat-label>\n                <input matInput [ngModel]=\"startDate\" [max]=\"filterStartDate\" name=\"startDate\" [matDatepicker]=\"startpicker\">\n                <mat-datepicker-toggle matSuffix [for]=\"startpicker\"></mat-datepicker-toggle>\n                <mat-datepicker #startpicker color=\"primary\"></mat-datepicker>\n            </mat-form-field>\n            <mat-form-field color=\"accent\" appearance=\"fill\" class=\"height\">\n                <mat-label>To</mat-label>\n                <input matInput [ngModel]=\"endDate\" [min]=\"filterEndDate\" name=\"endDate\" [matDatepicker]=\"endpicker\">\n                <mat-datepicker-toggle matSuffix [for]=\"endpicker\"></mat-datepicker-toggle>\n                <mat-datepicker #endpicker color=\"primary\"></mat-datepicker>\n            </mat-form-field>\n            <button mat-mini-fab color=\"primary\" type=\"submit\">\n                <mat-icon>search</mat-icon>\n            </button>\n        </form>\n    </section>\n    <section *ngIf=\"(isLoading$ | async)\" class=\"margin\">\n        <h2 style=\"color: darkblue;\">Loading ...</h2>\n    </section>\n    <section *ngIf=\"!(isLoading$ | async)\" class=\"margin\">\n        <app-expense-table [datasource]=\"datasource\" [displayedColumn$]=\"displayedColumn$\"></app-expense-table>\n    </section>\n    <!-- <section *ngIf=\"!(isLoading$ | async)\" class=\"margin\">\n        <app-expense-expand-panel [datasource]=\"datasource\"></app-expense-expand-panel>\n    </section> -->\n</div>","import { Component, OnInit, Input, ViewChild, AfterViewInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { MatLegacyTableDataSource as MatTableDataSource } from '@angular/material/legacy-table';\nimport { ExpenseHistory, ExpenseState } from 'src/app/store/expense.reducer';\nimport { MatLegacyDialog as MatDialog } from '@angular/material/legacy-dialog';\nimport { Store } from '@ngrx/store';\nimport { ExpenseService } from 'src/app/services/expense.service';\nimport { DialogComponent } from 'src/app/shared/dialog/dialog.component';\nimport * as expenseActions from './../../../store/expense.action';\nimport * as appReducer from './../../../store/app.reducer';\nimport { MatLegacyPaginator as MatPaginator } from '@angular/material/legacy-paginator';\n\n@Component({\n  selector: 'app-expense-table',\n  templateUrl: './expense-table.component.html',\n  styleUrls: ['./expense-table.component.css']\n})\nexport class ExpenseTableComponent implements AfterViewInit {\n\n  @Input() displayedColumn$: Observable<string[]>;\n  @Input() datasource: MatTableDataSource<ExpenseHistory>;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n\n  constructor(private expenseService: ExpenseService,\n              private store: Store<ExpenseState>,\n              private matDialog: MatDialog) {}\n\n  ngAfterViewInit(): void {\n    this.datasource.paginator = this.paginator;\n  }\n\n  confirmDelete(expenseId: string) {\n    const dialogRef = this.matDialog.open(DialogComponent, { data: { dialogType: 1 } });\n    dialogRef.afterClosed().subscribe(\n      result => {\n        if (result) {\n          this.expenseService.deleteExpense(expenseId);\n        }\n      }\n    );\n  }\n\n  openComment(expenseComment: string) {\n    const dialogRef = this.matDialog.open(DialogComponent, { data: { dialogType: 2, comment: expenseComment } });\n  }\n\n  onEdit(element: ExpenseHistory) {\n    this.store.dispatch(new expenseActions.SetEditModeOn);\n    this.store.dispatch(new expenseActions.SetEditExpenseElement(element));\n    this.expenseService.expenseTabSelect.next(2);\n  }\n\n}\n","<section class=\"firefox-bug mat-elevation-z8 margin flex-col\">\n    <table mat-table [dataSource]=\"datasource\">\n\n        <ng-container matColumnDef=\"itemName\">\n            <mat-header-cell *matHeaderCellDef>Item Name</mat-header-cell>\n            <mat-cell *matCellDef=\"let element\" style=\"display: flex;column-gap: 5px;\">\n                {{ element.itemName }}\n                <span *ngIf=\"element.edited\" class=\"font\">(edited)</span>\n            </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"price\">\n            <mat-header-cell *matHeaderCellDef>Price</mat-header-cell>\n            <mat-cell *matCellDef=\"let element\">{{ element.price }}</mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"purchaseDate\">\n            <mat-header-cell *matHeaderCellDef>Purchase Date</mat-header-cell>\n            <mat-cell *matCellDef=\"let element\">{{ element.purchaseDate | date: 'dd-MM-yyyy' }}</mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"category\">\n            <mat-header-cell *matHeaderCellDef>Category</mat-header-cell>\n            <mat-cell *matCellDef=\"let element\" style=\"display: flex;\">\n                {{ element.category }}\n                <div class=\"flex-row\">\n                    <!-- <mat-icon *ngIf=\"element.isEdited\" class=\"iconSize\" matTooltip=\"Item has been edited\" color=\"primary\">info</mat-icon> -->\n                    <mat-icon *ngIf=\"element.comment !== ''\" class=\"iconSize\" matTooltip=\"Click to check comments\" color=\"primary\" (click)=\"openComment(element.comment)\">class</mat-icon>\n                    <mat-icon matTooltip=\"Edit expense item\" class=\"iconSize\" color=\"primary\" (click)=\"onEdit(element)\">edit</mat-icon>\n                    <mat-icon matTooltip=\"Delete Expense item\" class=\"iconSize\" color=\"warn\" (click)=\"confirmDelete(element.id)\">delete_outline</mat-icon>\n                </div>\n            </mat-cell>\n        </ng-container>\n        <mat-header-row *matHeaderRowDef=\"(displayedColumn$ | async)\"></mat-header-row>\n        <mat-row *matRowDef=\"let row; columns: (this.displayedColumn$ | async);\"></mat-row>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { ExpenseService } from '../services/expense.service';\nimport * as appReducer from './../store/app.reducer';\nimport { Store } from '@ngrx/store';\nimport { ExpenseState } from '../store/expense.reducer';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-expense',\n  templateUrl: './expense.component.html',\n  styleUrls: ['./expense.component.css']\n})\nexport class ExpenseComponent implements OnInit {\n\n  selectedIndex = 0;\n  isEditMode$: Observable<boolean>;\n\n  constructor(private expenseService: ExpenseService,\n              private store: Store<ExpenseState>) { }\n\n  ngOnInit(): void {\n    this.expenseService.expenseTabSelect.subscribe(\n      index => {\n        this.selectedIndex = index;\n      }\n    );\n    this.isEditMode$ = this.store.select(appReducer.getEditMode);\n  }\n\n}\n","<mat-tab-group animationDuration=\"0\" [(selectedIndex)]=\"selectedIndex\">\n    <mat-tab label=\"Expense History\">\n        <app-expense-history></app-expense-history>\n    </mat-tab>\n    <mat-tab label=\"Add New Expense\" *ngIf=\"!(isEditMode$ | async)\">\n        <app-new-expense></app-new-expense>\n    </mat-tab>\n    <mat-tab label=\"Edit Expense\" *ngIf=\"(isEditMode$ | async)\">\n        <app-edit-expense></app-edit-expense>\n    </mat-tab>\n</mat-tab-group>","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { UntypedFormGroup, UntypedFormControl, Validators, UntypedFormArray } from '@angular/forms';\nimport { ExpenseService } from './../../services/expense.service';\nimport { ExpenseState, Category } from 'src/app/store/expense.reducer';\nimport { Store } from '@ngrx/store';\nimport * as appReducer from './../../store/app.reducer';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-new-expense',\n  templateUrl: './new-expense.component.html',\n  styleUrls: ['./new-expense.component.css']\n})\nexport class NewExpenseComponent implements OnInit {\n\n  newExpenseForm: UntypedFormGroup;\n  categories$: Observable<Category[]>;\n\n  constructor(private expenseService: ExpenseService,\n              private store: Store<ExpenseState>) { }\n\n  ngOnInit(): void {\n    this.initForm();\n    this.categories$ = this.store.select(appReducer.getCategories);\n  }\n\n  initForm() {\n    this.newExpenseForm = new UntypedFormGroup({\n      expenseItemArray: new UntypedFormArray([])\n    });\n  }\n\n  addNewExpenseItem() {\n    (<UntypedFormArray>this.newExpenseForm.get('expenseItemArray'))\n    .push(new UntypedFormGroup({\n      purchaseDate: new UntypedFormControl('', Validators.required),\n      itemName: new UntypedFormControl('', Validators.required),\n      itemPrice: new UntypedFormControl('', Validators.required),\n      category: new UntypedFormControl('', Validators.required),\n      comment: new UntypedFormControl('')\n    }));\n  }\n\n  onDelete(index) {\n    (<UntypedFormArray>this.newExpenseForm.get('expenseItemArray')).removeAt(index);\n  }\n\n  onSubmit() {\n    this.expenseService.saveExpenses(this.newExpenseForm.value.expenseItemArray);\n    const expenseItemArrayLength = this.newExpenseForm.get('expenseItemArray')['controls'].length;\n    for(let i=0; i<expenseItemArrayLength; i++){\n      this.onDelete(i);\n    }\n    this.expenseService.expenseTabSelect.next(0);\n  }\n}\n","<form [formGroup]=\"newExpenseForm\" (ngSubmit)=\"onSubmit()\">\n    <div formArrayName=\"expenseItemArray\">\n        <mat-card class=\"margin mat-elevation-z2 flex-container\" *ngFor=\"let item of newExpenseForm.get('expenseItemArray')['controls']; let i=index;\" [formGroupName]=\"i\">\n            <mat-form-field>\n                <mat-label>Enter the name of the item</mat-label>\n                <input matInput type=\"text\" formControlName=\"itemName\">\n                <mat-error>You must enter name of the item</mat-error>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Enter the price</mat-label>\n                <input matInput type=\"number\" formControlName=\"itemPrice\">\n                <mat-error>You must enter price</mat-error>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-select formControlName=\"category\">\n                    <mat-option *ngFor=\"let category of (categories$ | async)\" [value]=\"category.Name\">{{ category.Name }}</mat-option>\n                </mat-select>\n                <mat-error>You must select category</mat-error>\n            </mat-form-field>\n            <mat-form-field color=\"accent\" appearance=\"fill\">\n                <mat-label >Enter date of purchase</mat-label>\n                <input matInput formControlName=\"purchaseDate\" [matDatepicker]=\"picker\">\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-datepicker #picker color=\"primary\"></mat-datepicker>\n                <mat-error>You must enter date of purchase</mat-error>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Leave a comment</mat-label>\n                <textarea matInput formControlName=\"comment\"></textarea>\n            </mat-form-field>\n            <mat-card-footer>\n                <button type=\"button\" mat-raised-button color=\"warn\" class=\"margin\" (click)=\"onDelete(i)\">Delete</button>\n            </mat-card-footer>\n        </mat-card>\n    </div>\n    <button type=\"submit\" mat-raised-button color=\"primary\" *ngIf=\"newExpenseForm.get('expenseItemArray')['controls'].length > 0\" class=\"margin\" [disabled]=\"!this.newExpenseForm.valid\">Save</button>\n    <button type=\"button\" mat-raised-button color=\"primary\" (click)=\"addNewExpenseItem()\" class=\"margin\">Add New Expense</button>\n</form>","import { NgModule } from \"@angular/core\";\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatLegacyButtonModule as MatButtonModule } from '@angular/material/legacy-button';\nimport {MatLegacyFormFieldModule as MatFormFieldModule } from '@angular/material/legacy-form-field';\nimport { MatLegacyInputModule as MatInputModule } from '@angular/material/legacy-input';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatLegacyCheckboxModule as MatCheckboxModule } from '@angular/material/legacy-checkbox';\nimport { MatLegacyProgressBarModule as MatProgressBarModule } from '@angular/material/legacy-progress-bar';\nimport { MatLegacySnackBarModule as MatSnackBarModule } from '@angular/material/legacy-snack-bar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatLegacyListModule as MatListModule } from '@angular/material/legacy-list';\nimport { MatIconModule, MatIconRegistry } from '@angular/material/icon';\nimport { MatLegacyMenuModule as MatMenuModule } from '@angular/material/legacy-menu';\nimport { MatLegacyTabsModule as MatTabsModule } from '@angular/material/legacy-tabs';\nimport { MatLegacySelectModule as MatSelectModule } from '@angular/material/legacy-select';\nimport { MatLegacyTableModule as MatTableModule } from '@angular/material/legacy-table';\nimport { MatLegacyPaginatorModule as MatPaginatorModule } from '@angular/material/legacy-paginator';\nimport { MatLegacyTooltipModule as MatTooltipModule } from '@angular/material/legacy-tooltip';\nimport { MatLegacyDialogModule as MatDialogModule } from '@angular/material/legacy-dialog';\nimport { MatLegacyProgressSpinnerModule as MatProgressSpinnerModule } from '@angular/material/legacy-progress-spinner';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\n\n@NgModule({\n    declarations:[],\n    imports:[\n        MatToolbarModule,\n        MatButtonModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatDividerModule,\n        MatCardModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatCheckboxModule,\n        MatProgressBarModule,\n        MatSnackBarModule,\n        MatSidenavModule,\n        MatListModule,\n        MatIconModule,\n        MatMenuModule,\n        MatTabsModule,\n        MatSelectModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatTooltipModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatExpansionModule,\n        MatGridListModule\n    ],\n    exports:[\n        MatToolbarModule,\n        MatButtonModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatDividerModule,\n        MatCardModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatCheckboxModule,\n        MatProgressBarModule,\n        MatSnackBarModule,\n        MatSidenavModule,\n        MatListModule,\n        MatIconModule,\n        MatMenuModule,\n        MatTabsModule,\n        MatSelectModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatTooltipModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatExpansionModule,\n        MatGridListModule\n    ]\n})\nexport class MaterialModule {}","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport * as appReducer from '../../store/app.reducer';\nimport { Observable } from 'rxjs';\nimport { AuthState } from 'src/app/store/auth.reducer';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  isAuthenticated$: Observable<boolean>;\n  constructor(private store: Store<AuthState>,\n              private authService: AuthService) { }\n\n  @Output() toggleSideBar = new EventEmitter<void>();\n\n  ngOnInit(): void {\n    this.isAuthenticated$ = this.store.select(appReducer.getIsAuthenticated);\n  }\n\n  onLogout() {\n    this.authService.logout();\n  }\n\n  onClick() {\n    this.toggleSideBar.emit();\n  }\n}\n","<mat-toolbar color=\"primary\">\n    <div class=\"flex-container\">\n        <div>\n            <button mat-button *ngIf=\"(isAuthenticated$ | async)\" (click)=\"onClick()\">\n                <mat-icon>menu</mat-icon>\n            </button>\n            <button mat-button style=\"color: white;\" color=\"primary\" routerLink=\"/dashboard\">Expense Tracker</button>\n        </div>\n        <div>\n            <button style=\"color: white;\" mat-button routerLink=\"/login\" *ngIf=\"!(isAuthenticated$ | async)\"\n                color=\"primary\">Login</button>\n            <button style=\"color: white;\" mat-button routerLink=\"/signup\" *ngIf=\"!(isAuthenticated$ | async)\"\n                color=\"primary\">Sign Up</button>\n            <button mat-mini-fab color=\"primary\" *ngIf=\"(isAuthenticated$ | async)\" [matMenuTriggerFor]=\"menu\">\n                <mat-icon>account_circle</mat-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\">\n                <button mat-menu-item *ngIf=\"(isAuthenticated$ | async)\"\n                    color=\"primary\" routerLink=\"profile\">\n                    <span style=\"color:darkblue\">Profile</span>\n                </button>\n                <button mat-menu-item (click)=\"onLogout()\" *ngIf=\"(isAuthenticated$ | async)\"\n                    color=\"primary\">\n                    <span style=\"color:darkblue\">Logout</span>\n                </button>\n            </mat-menu>\n        </div>\n    </div>\n</mat-toolbar>","import { Component, OnInit, Output, EventEmitter, AfterViewChecked, AfterViewInit } from '@angular/core';\nimport { ExpenseState } from 'src/app/store/expense.reducer';\nimport { Store } from '@ngrx/store';\nimport * as expenseActions from './../../store/expense.action';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit, AfterViewInit {\n\n  @Output() sidenavClickEvent = new EventEmitter<void>();\n  @Output() sidenavLoadEvent = new EventEmitter<void>();\n\n  constructor(private store: Store<ExpenseState>) { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => this.sidenavLoadEvent.emit(),0);\n  }\n\n  onClick() {\n    this.sidenavClickEvent.emit();\n  }\n\n}\n","<mat-nav-list role=\"list\">\n    <a mat-list-item routerLink=\"/dashboard\" (click)=\"onClick()\">\n        <mat-icon matListIcon color=\"primary\">dashboard</mat-icon>\n        <span style=\"font-size: 15px; color:blue\">Dashboard</span>\n    </a>\n    <a mat-list-item routerLink=\"/expense\" (click)=\"onClick()\">\n        <mat-icon matListIcon color=\"primary\">timeline</mat-icon>\n        <span style=\"font-size: 15px; color:blue\">Expense</span>\n    </a>\n</mat-nav-list>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>profile works!</p>\n","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AuthState } from './../store/auth.reducer';\nimport * as appReducer from './../store/app.reducer';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport * as authActions from './../store/auth.action';\n\n@Injectable({\n    providedIn: 'root',\n  })\nexport class AuthGuard implements CanActivate {\n\n    constructor(private store: Store<AuthState>) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) : Observable<boolean> {\n        // return false;\n        return this.store.select(appReducer.getIsAuthenticated);\n    }\n}","import {HttpHandler, HttpInterceptor, HttpRequest, HttpResponse} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AuthState } from './../store/auth.reducer';\nimport * as appReducer from './../store/app.reducer';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n    constructor(private authService: AuthService) {}\n\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\n        const token = this.authService.getToken();\n        const authRequest = req.clone({headers: req.headers.set('Authorization','Bearer '+token)});\n        return next.handle(authRequest);\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport * as authActions from './../store/auth.action';\nimport { MatLegacySnackBar as MatSnackBar } from '@angular/material/legacy-snack-bar';\nimport { Router } from '@angular/router';\nimport { DashboardService } from './dashboard.service';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { UserDetail } from './../model/user-detail';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private store: Store,\n    private snackbar: MatSnackBar,\n    private router: Router,\n    private dashboardService: DashboardService,\n    private http: HttpClient) { }\n\n  private token: String = '';\n\n  getToken() {\n    return this.token;\n  }\n\n  autoLogin() {\n    // const result = this.cookieService.get('user');\n    // if (result != \"\") {\n    //   const user = JSON.parse(result);\n    //   if (new Date(user.user.stsTokenManager.expirationTime) > new Date()) {\n    //     // this.expenseService.getCategories().then(\n    //     //   () => {\n    //     //     this.store.dispatch(new authActions.Authenticate(user.user.uid, ''));\n    //     //     // this.router.navigate(['/dashboard']);\n    //     //     this.dashboardService.setExpenseDetail();\n    //     //   }\n    //     // );\n    //   }\n    // }\n    // else {\n    //   this.router.navigate(['/login']);\n    // }\n  }\n\n  login(email: string, password: string): void {\n    this.store.dispatch(new authActions.StartBuffer());\n    this.store.dispatch(new authActions.StartAuthentication());\n    this.http.post<{ token: string, message: string }>(environment.url + \"authenticate\", { userName: email, password: password })\n      .subscribe(\n        (response) => {\n          this.token = response.token;\n          if (response.token != \"\" || response.token != null) {\n            this.http.get<UserDetail>(environment.url + \"user/\" + email)\n              .subscribe(\n                (user) => {\n                  const displayName = user.firstName + \" \" + user.lastName;\n                  this.store.dispatch(new authActions.StopBuffer());\n                  this.store.dispatch(new authActions.Authenticate(user.id, displayName));\n                  this.dashboardService.initLoadData();\n                  this.router.navigate(['/dashboard']);\n                },\n                (error) => {\n                  this.snackbar.open(response.message, 'Dismiss', {duration: 5000});\n                  this.store.dispatch(new authActions.StopBuffer());\n                  this.store.dispatch(new authActions.StopAuthentication());                  \n                }\n              );\n          }\n        }\n      );\n  }\n\n  signup(userDetail): void {\n    this.store.dispatch(new authActions.StartBuffer());\n    // this.afAuth.createUserWithEmailAndPassword(userDetail.email, userDetail.password)\n    //   .then(\n    //     result => {\n    //       const profile = {\n    //         displayName: userDetail.displayName,\n    //         photoURL: ''\n    //       };\n    //       result.user.updateProfile(profile).then(\n    //         (data) => { console.log('update profile'); console.log(data) }\n    //       );\n    //       // this.expenseService.getCategories();\n    //       this.store.dispatch(new authActions.StopBuffer());\n    //       // this.fireStore.collection('UserDetail').add({ UserId: result.user.uid,\n    //       //                                               Name: userDetail.name,\n    //       //                                               EmailId: userDetail.email,\n    //       //                                               DateOfBirth: userDetail.dob});\n    //       this.store.dispatch(new authActions.Authenticate(result.user.uid, result.user.displayName));\n    //       this.router.navigate(['/dashboard']);\n    //       // this.dashboardService.setExpenseDetail();\n    //       this.cookieService.set('user', JSON.stringify(result));\n    //     }\n    //   )\n    //   .catch(\n    //     error => {\n    //       this.snackbar.open(error, 'Dismiss', { duration: 5000 });\n    //       this.store.dispatch(new authActions.StopBuffer());\n    //     }\n    //   );\n  }\n\n  logout(): void {\n    this.token = \"\";\n    this.store.dispatch(new authActions.UnAuthenticate());\n    this.router.navigate(['/login']);\n    // this.afAuth.signOut()\n    //   .then(\n    //     result => {\n    //       this.store.dispatch(new authActions.UnAuthenticate());\n    //       this.router.navigate(['/login']);\n    //       this.cookieService.delete('user');\n    //     }\n    //   );\n  }\n\n  signInWithGoogle(): void {\n    // this.afAuth.signInWithPopup(new auth.GoogleAuthProvider())\n    //   .then(\n    //     result => {\n    //       // this.expenseService.getCategories();\n    //       this.store.dispatch(new authActions.StopBuffer());\n    //       this.store.dispatch(new authActions.Authenticate(result.user.uid, ''));\n    //       this.router.navigate(['/dashboard']);\n    //     }\n    //   )\n    //   .catch(\n    //     error => {\n    //       this.snackbar.open(error, 'Dismiss', { duration: 5000 });\n    //       this.store.dispatch(new authActions.StopBuffer());\n    //     }\n    //   );\n  }\n\n  signInWithFacebook(): void {\n  //   this.afAuth.signInWithPopup(new auth.FacebookAuthProvider())\n  //     .then(\n  //       result => {\n  //         // this.expenseService.getCategories();\n  //         this.store.dispatch(new authActions.StopBuffer());\n  //         this.store.dispatch(new authActions.Authenticate(result.user.uid, ''));\n  //         this.router.navigate(['/dashboard']);\n  //       }\n  //     )\n  //     .catch(\n  //       error => {\n  //         this.snackbar.open(error, 'Dismiss', { duration: 5000 });\n  //         this.store.dispatch(new authActions.StopBuffer());\n  //       }\n  //     );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { ExpenseDetail, CategoryExpense, DashboardState } from './../store/dashboard.reducer';\nimport * as appReducer from './../store/app.reducer';\nimport { Observable, of, Subject, Subscription } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { Category } from '../store/expense.reducer';\nimport * as dashboardActions from './../store/dashboard.action';\nimport { switchMap } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ExpenseAggregateDetail } from './../model/expense-aggregate-detail';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DashboardService {\n\n  categoryChangeEvent = new Subject<number[]>();\n  monthlyExpenseChangeEvent = new Subject<Observable<{categories: string[],\n                                                      monthlyCategoryExpense: number[],\n                                                      totalExpense: number}>>();\n  private monthName = [\n    {monthName: 'January', nextIndex: 1, previousIndex: 11},\n    {monthName: 'February', nextIndex: 2, previousIndex: 0},\n    {monthName: 'March', nextIndex: 3, previousIndex: 1},\n    {monthName: 'April', nextIndex: 4, previousIndex: 2},\n    {monthName: 'May', nextIndex: 5, previousIndex: 3},\n    {monthName: 'June', nextIndex: 6, previousIndex: 4},\n    {monthName: 'July', nextIndex: 7, previousIndex: 5},\n    {monthName: 'August', nextIndex: 8, previousIndex: 6},\n    {monthName: 'September', nextIndex: 9, previousIndex: 7},\n    {monthName: 'October', nextIndex: 10, previousIndex: 8},\n    {monthName: 'November', nextIndex: 11, previousIndex: 9},\n    {monthName: 'December', nextIndex: 0, previousIndex: 10}];\n\n  constructor(\n    private store: Store<DashboardState>,\n    private http: HttpClient\n  ) {}\n\n  initLoadData() {\n    this.store.dispatch(new dashboardActions.StartAnnualExpenseGraphLoading);\n    this.store.dispatch(new dashboardActions.StartCategoryExpenseGraphLoading);\n\n    this.getCurrentMonthExpenseDetail()\n    .pipe(take(1))\n    .subscribe(\n      data => this.store.dispatch(new dashboardActions.SetCurrentMonthExpense(data))\n    );\n\n    this.getPreviousMonthExpenseDetail()\n    .pipe(take(1))\n    .subscribe(\n      data => this.store.dispatch(new dashboardActions.SetPreviousMonthExpense(data))\n    );\n\n    this.getCurrentYearExpenseDetail()\n    .pipe(take(1))\n    .subscribe(\n      data => this.store.dispatch(new dashboardActions.SetCurrentYearExpense(data))\n    );\n    \n    this.getPreviousYearExpenseDetail()\n    .pipe(take(1))\n    .subscribe(\n      data => this.store.dispatch(new dashboardActions.SetPreviousYearExpense(data))\n    );\n\n    this.getExpenseMonthonMonth()\n    .pipe(take(1))\n    .subscribe(\n      data => this.store.dispatch(new dashboardActions.SetExpenseMonthonMonth(data))\n    );\n\n    this.getExpenseYearonYear()\n    .pipe(take(1))\n    .subscribe(\n      data => this.store.dispatch(new dashboardActions.SetExpenseYearonYear(data))\n    );\n\n    this.getTrendingExpenses()\n    .pipe(take(1))\n    .subscribe(\n      data => this.store.dispatch(new dashboardActions.SetTrendingExpenses(data))\n    );\n\n    this.getCategories()\n    .pipe(take(1))\n    .subscribe(\n      (data:Category[]) => {\n        this.store.dispatch(new dashboardActions.SetCategories(data));\n        this.getAnnualExpenseDetailByCategory(data[0].Name)\n        .pipe(take(1))\n        .subscribe(\n          data => {\n            this.store.dispatch(new dashboardActions.SetCategoryExpenseDetail(data));\n            this.store.dispatch(new dashboardActions.StopCategoryExpenseGraphLoading);\n          }\n        );\n      }\n    );\n\n    this.getAnnualExpenseDetail()\n    .pipe(take(1))\n    .subscribe(\n      data => {\n        this.store.dispatch(new dashboardActions.SetAnnualExpenseDetail(data));\n        this.store.dispatch(new dashboardActions.StopAnnualExpenseGraphLoading);\n      }\n    );\n  }\n\n  getTrendingExpenses():Observable<CategoryExpense[]> {\n    return this.store.select(appReducer.getUserId)\n    .pipe(\n      switchMap(\n        (id) => {\n          return this.http.get<{_id:string,expense:number}[]>(environment.url+\"topFiveExpenses\",{params: {\"id\": id}})\n          .pipe(\n            map((response) => {\n              let expense: CategoryExpense[] = [];\n              response.forEach(element => {\n                expense.push({category: element._id, expense: element.expense})\n              });\n              return expense;\n            })\n          )\n        }\n      )\n    )\n  }\n\n  getExpenseDetailByYear(year: string) : Observable<number> {\n    return this.store.select(appReducer.getUserId)\n    .pipe(\n      switchMap(\n        (id) => {\n          return this.http.get<ExpenseAggregateDetail>(environment.url+\"expenses/year\",{params: {\"id\": id, \"year\": year}})\n          .pipe(\n            map(response => response.expense)\n          )\n        }\n      )\n    )\n  }\n\n  getExpenseMonthonMonth(): Observable<number> {\n    return this.store.select(appReducer.getUserId)\n    .pipe(\n      switchMap(\n        (id) => {\n          return this.http.get<ExpenseAggregateDetail>(environment.url+\"expenses/mom\",{params:{\"id\":id}})\n          .pipe(\n            map(response => response.expense)\n          )\n        }\n      )\n    )\n  }\n\n  getExpenseYearonYear(): Observable<number> {\n    return this.store.select(appReducer.getUserId)\n    .pipe(\n      switchMap(\n        (id) => {\n          return this.http.get<ExpenseAggregateDetail>(environment.url+\"expenses/yoy\",{params:{\"id\":id}})\n          .pipe(\n            map(response => response.expense)\n          )\n        }\n      )\n    )\n  }\n\n  getExpenseDetailByMonth(year: string, month: string) :Observable<number> {\n    return this.store.select(appReducer.getUserId)\n    .pipe(\n      switchMap(\n        (id) => {\n          return this.http.get<ExpenseAggregateDetail>(environment.url+\"expenses/month\",{params: {\"id\": id, \"year\": year, \"month\": month}})\n          .pipe(\n            map(response => response.expense)\n          )\n        }\n      )\n    );\n  }\n\n  refreshData() {\n    this.initLoadData();\n  }\n\n  getCurrentMonthExpenseDetail() {\n    const date = new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0);\n    const month = date.toLocaleString('en-US', {month: 'long'});\n    const year = date.toLocaleString('en-US', {year: 'numeric'});\n    return this.getExpenseDetailByMonth(year, month);\n  }\n\n  getPreviousMonthExpenseDetail() {\n    const date = new Date(new Date().getFullYear(), new Date().getMonth() == 0 ? 11 : new Date().getMonth() -1, 1);\n    const month = date.toLocaleString('en-US', {month: 'long'});\n    const year = date.toLocaleString('en-US', {year: 'numeric'});\n    return this.getExpenseDetailByMonth(year, month);\n  }\n\n  getCurrentYearExpenseDetail() {\n    const date = new Date(new Date().getFullYear(), 0, 1);\n    const year = date.toLocaleString('en-US', {year: 'numeric'});\n    return this.getExpenseDetailByYear(year);\n  }\n\n  getPreviousYearExpenseDetail() {\n    const date = new Date(new Date().getFullYear() - 1, 0, 1);\n    const year = date.toLocaleString('en-US', {year: 'numeric'});\n    return this.getExpenseDetailByYear(year);\n  }\n\n  getCategories(): Observable<Category[]> {\n    return this.http.get<{id: string,name: string, description: string}[]>(environment.url+\"categories\")\n    .pipe(\n      map(\n        response => {\n          let categories :Category[] = [];\n          response.forEach(element => {\n            categories.push({Name:element.name, Description:element.description});  \n          });\n          return categories;\n        }\n      )\n    )\n  }\n  \n  getAnnualExpenseDetailByCategory(category: string):Observable<ExpenseDetail[]> {\n    const date = new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0);\n    const year = date.toLocaleString('en-US', {year: 'numeric'});\n    return this.store.select(appReducer.getUserId)\n    .pipe(\n      switchMap(\n        (id) => {\n          return this.http.get<{date:{year:string,month:string}, expense:number}[]>(environment.url+\"expenseCategorySummary\",{params:{\"id\":id, \"year\": year, \"category\":category}})\n          .pipe(\n            map(response => {\n              let expense: ExpenseDetail[] = [];\n              response.forEach(element => {\n                expense.push({month:element.date.month, amount: element.expense})\n              });\n              return expense;\n            })\n          )\n        }\n      )\n    )\n  }\n\n  /* \n    Description - Method to fetch expense data for the last twelve months from current date\n    Input Parameters -\n      NA \n    Returns -\n      An observable with the below parameters -\n        months            - An array of string with last twelve months from current date.\n        lastAnnualExpense - An array of numbers with expense of last twelve months from current \n                            date.\n  */\n  getAnnualExpenseDetail(): Observable<ExpenseDetail[]> {\n    const date = new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0);\n    const year = date.toLocaleString('en-US', {year: 'numeric'});\n    return this.store.select(appReducer.getUserId)\n    .pipe(\n      switchMap(\n        (id) => {\n          return this.http.get<{date:{year:string,month:string}, expense:number}[]>(environment.url+\"expenseSummary\",{params:{\"id\":id, \"year\": year}})\n          .pipe(\n            map(response => {\n              let expense: ExpenseDetail[] = [];\n              response.forEach(element => {\n                expense.push({month:element.date.month, amount: element.expense})\n              });\n              return expense;\n            })\n          )\n        }\n      )\n    )\n  }\n\n  getlastMonthNames(numberOfMonths): Observable<string[]> {\n    let currentMonthIndex = new Date().getMonth();\n    const months: string[] = [];\n    for(let index=0; index < numberOfMonths; index++) {\n      months.push(this.monthName[currentMonthIndex].monthName);\n      currentMonthIndex = this.monthName[currentMonthIndex].previousIndex;\n    }\n    months.reverse();\n    return of(months);\n  }\n\n  getAllMonths(): Observable<string[]> {\n    const allMonths: string[] = [];\n    this.monthName.map(\n      month => allMonths.push(month.monthName)\n    )\n    return of(allMonths);\n  }\n\n  getCurrentMonth(): Observable<string> {\n    return this.getAllMonths()\n    .pipe(\n      map(\n        (result) => {\n          const currentMonth = (new Date()).getMonth();\n          return result[currentMonth];\n        }\n      )\n    )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport * as expenseActions from './../store/expense.action';\nimport * as appReducer from './../store/app.reducer';\nimport { Observable, Subject,  Subscription } from 'rxjs';\nimport { ExpenseHistory } from './../store/expense.reducer';\nimport { map, switchMap, take } from 'rxjs/operators';\nimport { DashboardService } from './dashboard.service';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExpenseService {\n\n    expenseTabSelect = new Subject<number>();\n    subscription: Subscription[] = [];\n\n    constructor(private store: Store<{ Name: string, Description: string }>,\n                private http: HttpClient,\n                private dashboardService: DashboardService,\n                private toastr: ToastrService) { }\n\n    saveExpenses(expenseItems): void {\n        let expenseHistory: ExpenseHistory[] = [];\n        this.store.select(appReducer.getUserId).subscribe(\n            userId => {\n                expenseItems.map(\n                    item => {\n                        const expenseItem: ExpenseHistory = {\n                            id: null,\n                            userId: userId,\n                            itemName: item.itemName,\n                            comment: item.comment,\n                            purchaseDate: item.purchaseDate,\n                            category: item.category,\n                            price: item.itemPrice,\n                            edited: false\n                        }\n                        expenseHistory.push(expenseItem);\n                    }\n                );\n                this.http.post(environment.url+\"expenses\",expenseHistory)\n                .pipe(take(1))\n                .subscribe(\n                    () => {\n                        this.refreshExpenses();\n                        this.dashboardService.refreshData();\n                        this.toastr.success('Success', 'Expense added successfully');\n                        // console.log('Insert complete successfully');\n                    }\n                )\n                // this.dashboardService.setExpenseDetail().then(\n                //     () => {\n                //         this.expenseTabSelect.next(0);\n                //     }\n                // );\n            }\n        );\n    }\n    \n    refreshExpenses() {\n        let startDate: string;\n        let endDate: string;\n        this.store.select(appReducer.getStartDate)\n        .pipe(take(1))\n        .subscribe(\n            (date: Date) => {\n                startDate = date.toDateString();\n                this.store.select(appReducer.getEndDate)\n                .pipe(take(1))\n                .subscribe(\n                    (date: Date) => {\n                        endDate = date.toDateString();\n                        if(startDate === \"\" && endDate === \"\") {\n                            startDate = (new Date((new Date()).getFullYear(), (new Date()).getMonth(), 1)).toDateString();\n                            endDate = (new Date((new Date()).getFullYear(), (new Date()).getMonth() + 1, 0)).toDateString();\n                        }\n                        this.getExpenses(startDate, endDate)\n                        .subscribe(\n                        (data:ExpenseHistory[]) => {\n                            this.store.dispatch(new expenseActions.SetExpenseData(data));\n                            this.store.dispatch(new expenseActions.SetLoadingOff);\n                        });\n                    }\n                )\n            }\n        )\n    }\n\n    getExpenses(startDate: string, endDate: string): Observable<ExpenseHistory[]> {\n        return this.store.select(appReducer.getUserId)\n        .pipe(\n            switchMap(\n                (id) => {\n                    return this.http.get<{id:string, userId:string, itemName: string, comment: string, purchaseDate: string, category: string, price: number, edited: boolean}[]>(environment.url+\"expenses\", {params: {\"id\": id, \"startDate\": startDate, \"endDate\": endDate}})\n                    .pipe(\n                        map(\n                            data => {\n                                let expense: ExpenseHistory[] = [];\n                                data.map(\n                                    element => {\n                                        expense.push({\n                                            id: element.id,\n                                            userId: element.userId,\n                                            itemName: element.itemName,\n                                            comment: element.comment,\n                                            purchaseDate: new Date(element.purchaseDate),\n                                            category: element.category,\n                                            price: element.price,\n                                            edited: element.edited\n                                        });\n                                    }\n                                );\n                                return expense;\n                            }\n                        )\n                    )\n                }\n            )\n        )\n    }\n\n    deleteExpense(expenseId: string): void {\n        this.store.select(appReducer.getUserId)\n        .pipe(take(1))\n        .subscribe(\n            (id) => {\n                this.http.delete(environment.url+\"expenses\", {params:{\"expenseId\":expenseId}})\n                .pipe(take(1))\n                .subscribe(\n                    () => {\n                        this.refreshExpenses();\n                        this.dashboardService.refreshData();\n                        this.toastr.success('Information', 'Expense deleted successfully');\n                        // this.toastr.fireSuccess('Information','Expense deleted successfully');\n                        console.log(\"Item deleted\");\n                    }\n                );\n            }\n        )\n    }\n\n    updateExpense(expense: ExpenseHistory): void {\n        this.store.select(appReducer.getUserId)\n        .pipe(take(1))\n        .subscribe(\n            id => {\n                expense.userId = id;\n                this.http.post(environment.url+\"expense\",expense)\n                .pipe(take(1))\n                .subscribe(\n                    () => {\n                        this.refreshExpenses();\n                        this.store.dispatch(new expenseActions.SetEditModeOff());\n                        this.dashboardService.refreshData();\n                        this.toastr.success('Success', 'Expense updated successfully');\n                        // this.toastr.fireSuccess('Success','Expense updated successfully');\n                        console.log('Update complete successfully');\n                    }\n                )\n            }\n        )\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FeedbackService {\n\n  constructor() {}\n\n  saveFeedBack(feedbackDetail): void {\n    // this.firestore.collection('Feedback').add({UserId: feedbackDetail.UserId,\n    //                                            Comments: feedbackDetail.Comments});\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UtilService {\n    getRandomColor() {\n        var letters = '0123456789ABCDEF';\n        var color = '#';\n        for (var i = 0; i < 6; i++) {\n            color += letters[Math.floor(Math.random() * 16)];\n        }\n        return color;\n    }\n}","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatLegacyDialogRef as MatDialogRef, MAT_LEGACY_DIALOG_DATA as MAT_DIALOG_DATA } from '@angular/material/legacy-dialog';\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.css']\n})\nexport class DialogComponent implements OnInit {\n\n  constructor(private matdialog: MatDialogRef<DialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<span mat-dialog-title *ngIf=\"data.dialogType === 1\">Confirm</span>\n<span mat-dialog-title *ngIf=\"data.dialogType === 2\">Comments</span>\n<span mat-dialog-content style=\"margin: 30px\" *ngIf=\"data.dialogType === 1\">Are you sure to Delete?</span>\n<span mat-dialog-content style=\"margin: 30px\" *ngIf=\"data.dialogType === 2\">{{ data.comment }}</span>\n<div mat-dialog-actions class=\"flex-container\">\n    <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"true\" *ngIf=\"data.dialogType === 1\">Delete</button>\n    <button mat-flat-button color=\"primary\" [mat-dialog-close]=\"false\" *ngIf=\"data.dialogType === 1\">Cancel</button>\n    <button mat-flat-button color=\"primary\" [mat-dialog-close]=\"false\" *ngIf=\"data.dialogType === 2\">Ok</button>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatLegacyDialogRef as MatDialogRef } from '@angular/material/legacy-dialog';\nimport { NgForm } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { take } from 'rxjs/operators';\nimport { AuthState } from '../../store/auth.reducer';\nimport * as appReducer from './../../store/app.reducer';\nimport { FeedbackService } from '../../services/feedback.service';\n\n@Component({\n  selector: 'app-feedback-form',\n  templateUrl: './feedback-form.component.html',\n  styleUrls: ['./feedback-form.component.css']\n})\nexport class FeedbackFormComponent implements OnInit {\n\n  @ViewChild('f') feedbackForm: NgForm;\n\n  constructor(private matdialog: MatDialogRef<FeedbackFormComponent>,\n              private store: Store<AuthState>,\n              private feedbackService: FeedbackService) { }\n\n  ngOnInit(): void {}\n\n  onSubmit(): void {\n    this.store.select(appReducer.getUserId)\n      .pipe(take(1))\n      .subscribe(\n        userId => {\n          this.feedbackService.saveFeedBack({UserId: userId, Comments: this.feedbackForm.value.comments});\n        }\n      );\n  }\n\n}\n","<form #f=\"ngForm\" (ngSubmit)=\"onSubmit()\" style=\"display: flex; flex-direction:column; width: 400px\">\n  <span mat-dialog-title>Your feedback</span>\n  <span mat-dialog-content style=\"display: flex; flex-direction: column;\">\n      <mat-form-field>\n          <mat-label>Enter your feedback</mat-label>\n          <textarea matInput rows=\"5\" #comments required ngModel name=\"comments\"></textarea>\n          <mat-error *ngIf=\"!comments.valid\">You must enter feedback</mat-error>\n      </mat-form-field>\n  </span>\n  <div mat-dialog-actions class=\"flex-container-row\">\n    <button type=\"submit\" mat-flat-button color=\"primary\" [mat-dialog-close]=\"true\">Submit</button>\n    <button type=\"button\" mat-flat-button color=\"accent\" [mat-dialog-close]=\"false\">Cancel</button>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.css']\n})\nexport class LoadingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"loader\">Loading...</div>","import { AuthState } from './auth.reducer';\nimport { ExpenseState } from './expense.reducer';\nimport { DashboardState } from './dashboard.reducer';\nimport { createFeatureSelector, createSelector } from '@ngrx/store';\n\n\nexport const getAuthState = createFeatureSelector<AuthState>('auth');\nexport const getIsAuthenticated = createSelector(getAuthState, state => state.isAuthenticated);\nexport const getUserId = createSelector(getAuthState, state => state.userid);\nexport const getIsBufferOn = createSelector(getAuthState, state => state.isBufferOn);\nexport const getToken = createSelector(getAuthState, state => state.token);\n\nexport const getExpenseState = createFeatureSelector<ExpenseState>('expense');\nexport const getExpenses = createSelector(getExpenseState, state => state.expenseHistory);\nexport const getDisplayedColumns = createSelector(getExpenseState, state => state.displayedColumns);\nexport const getEditMode = createSelector(getExpenseState, state => state.isEditModeOn);\nexport const getEditElement = createSelector(getExpenseState, state => state.editExpense);\nexport const getExpenseLoading = createSelector(getExpenseState, state => state.isExpenseLoading);\nexport const getStartDate = createSelector(getExpenseState, state => state.searchStartDate);\nexport const getEndDate = createSelector(getExpenseState, state => state.searchEndDate);\n\nexport const getDashboardState = createFeatureSelector<DashboardState>('dashboard');\nexport const getAnnualGraphLoadingStatus = createSelector(getDashboardState, state => state.isAnnualExpenseGraphLoading);\nexport const getIsDataUpdateInProgress = createSelector(getDashboardState, state => state.isDataUpdateInProgress);\nexport const getCategoryExpenseGraphLoadingStatus = createSelector(getDashboardState, state => state.isCategoryExpenseGraphLoading);\nexport const getCurrentMonthExpense = createSelector(getDashboardState, state => state.currentMonthExpense);\nexport const getPreviousMonthExpense = createSelector(getDashboardState, state => state.previousMonthExpense);\nexport const getCurrentYearExpense = createSelector(getDashboardState, state => state.currentYearExpense);\nexport const getPreviousYearExpense = createSelector(getDashboardState, state => state.previousYearExpense);\nexport const getExpenseMonthonMonth = createSelector(getDashboardState, state => state.expenseMonthonMonth);\nexport const getExpenseYearonYear = createSelector(getDashboardState, state => state.expenseYearonYear);\nexport const getTrendingExpenses = createSelector(getDashboardState, state => state.trendingExpenses);\nexport const getCategories = createSelector(getDashboardState, state => state.categories);\nexport const getCategoryExpenseDetail = createSelector(getDashboardState, state => state.categoryExpenseDetail);\nexport const getAnnualExpenseDetail = createSelector(getDashboardState, state => state.annualExpenseDetail);","import { Action } from '@ngrx/store';\n\nexport const AUTHENTICATE = 'AUTHENTICATE';\nexport const UNAUTHENTICATE = 'UNAUTHENTICATE';\nexport const STARTBUFFER = 'STARTBUFFER';\nexport const STOPBUFFER = 'STOPBUFFER';\nexport const START_AUTHENTICATION = 'START_AUTHENTICATION';\nexport const STOP_AUTHENTICATION = 'STOP_AUTHENTICATION';\n\nexport class StartAuthentication implements Action {\n    readonly type = START_AUTHENTICATION;\n}\n\nexport class StopAuthentication implements Action {\n    readonly type = STOP_AUTHENTICATION;\n}\n\nexport class Authenticate implements Action {\n    readonly type = AUTHENTICATE;\n    public constructor(public userId: string, public displayName: string) { }\n}\n\nexport class UnAuthenticate implements Action {\n    readonly type = UNAUTHENTICATE;\n}\n\nexport class StartBuffer implements Action {\n    readonly type = STARTBUFFER;\n}\n\nexport class StopBuffer implements Action {\n    readonly type = STOPBUFFER;\n}\n\nexport type AuthActions = Authenticate | \n                          UnAuthenticate | \n                          StartBuffer | \n                          StopBuffer |\n                          StartAuthentication |\n                          StopAuthentication;","import { AuthActions } from './auth.action';\nimport * as authAction from './auth.action';\n\nexport interface AuthState {\n    isAuthenticated: boolean;\n    userid: string;\n    isBufferOn: boolean;\n    displayName: string;\n    token: string;\n}\n\nconst initialState: AuthState = {\n    isAuthenticated: false,\n    userid: '',\n    isBufferOn: false,\n    displayName: '',\n    token: ''\n}\n\nexport function AuthReducer(state = initialState, action: AuthActions) {\n    switch(action.type) {\n        case authAction.AUTHENTICATE:\n            return {\n                isAuthenticated: true,\n                userid: action.userId,\n                isBufferOn: false,\n                displayName: action.displayName\n            };\n        case authAction.UNAUTHENTICATE:\n            return {\n                isAuthenticated: false,\n                userId: '',\n                isBufferOn: false,\n                token: ''\n            };\n        case authAction.STARTBUFFER:\n            return {\n                ...state,\n                isBufferOn: true\n            };\n        case authAction.STOPBUFFER:\n            return {\n                ...state,\n                isBufferOn: false\n            };\n        default:\n            return state;\n    }\n}\n\n","import { Action } from \"@ngrx/store\";\nimport { CategoryExpense, ExpenseDetail } from \"./dashboard.reducer\";\nimport { Category, ExpenseHistory } from './expense.reducer';\n\nexport const START_ANNUAL_EXPENSE_GRAPH_LOADING = 'Dashboard START_ANNUAL_EXPENSE_GRAPH_LOADING';\nexport const STOP_ANNUAL_EXPENSE_GRAPH_LOADING = 'Dashboard STOP_ANNUAL_EXPENSE_GRAPH_LOADING';\nexport const START_CATEGORY_EXPENSE_GRAPH_LOADING = 'Dashboard START_CATEGORY_EXPENSE_GRAPH_LOADING';\nexport const STOP_CATEGORY_EXPENSE_GRAPH_LOADING = 'Dashboard STOP_CATEGORY_EXPENSE_GRAPH_LOADING';\nexport const SET_CURRENT_MONTH_EXPENSE = 'Dashboard SET_CURRENT_MONTH_EXPENSE';\nexport const SET_PREVIOUS_MONTH_EXPENSE = 'Dashboard SET_PREVIOUS_MONTH_EXPENSE';\nexport const SET_CURRENT_YEAR_EXPENSE = 'Dashboard SET_CURRENT_YEAR_EXPENSE';\nexport const SET_PREVIOUS_YEAR_EXPENSE = 'Dashboard SET_PREVIOUS_YEAR_EXPENSE';\nexport const SET_EXPENSE_MONTH_ON_MONTH = 'Dashboard SET_EXPENSE_MONTH_ON_MONTH';\nexport const SET_EXPENSE_YEAR_ON_YEAR = 'Dashboard SET_EXPENSE_YEAR_ON_YEAR';\nexport const SET_CATEGORIES = 'Dashboard SET_CATEGORIES';\nexport const SET_TRENDING_EXPENSES = 'Dashboard SET_TRENDING_EXPENSES';\nexport const SET_CATEGORY_EXPENSE_DETAIL = 'Dashboard SET_CATEGORY_EXPENSE_DETAIL';\nexport const SET_ANNUAL_EXPENSE_DETAIL = 'Dashboard SET_ANNUAL_EXPENSE_DETAIL';\n\nexport class StartAnnualExpenseGraphLoading implements Action {\n    readonly type = START_ANNUAL_EXPENSE_GRAPH_LOADING;\n}\n\nexport class StopAnnualExpenseGraphLoading implements Action {\n    readonly type = STOP_ANNUAL_EXPENSE_GRAPH_LOADING;\n}\n\nexport class StartCategoryExpenseGraphLoading implements Action {\n    readonly type = START_CATEGORY_EXPENSE_GRAPH_LOADING;\n}\n\nexport class StopCategoryExpenseGraphLoading implements Action {\n    readonly type = STOP_CATEGORY_EXPENSE_GRAPH_LOADING;\n}\n\nexport class SetCurrentMonthExpense implements Action {\n    readonly type = SET_CURRENT_MONTH_EXPENSE;\n    constructor(public payload: number) {}\n}\n\nexport class SetPreviousMonthExpense implements Action {\n    readonly type = SET_PREVIOUS_MONTH_EXPENSE;\n    constructor(public payload: number) {}\n}\n\nexport class SetCurrentYearExpense implements Action {\n    readonly type = SET_CURRENT_YEAR_EXPENSE;\n    constructor(public payload: number) {}\n}\n\nexport class SetPreviousYearExpense implements Action {\n    readonly type = SET_PREVIOUS_YEAR_EXPENSE;\n    constructor(public payload: number) {}\n}\n\nexport class SetExpenseMonthonMonth implements Action {\n    readonly type = SET_EXPENSE_MONTH_ON_MONTH;\n    constructor(public payload: number) {}\n}\n\nexport class SetExpenseYearonYear implements Action {\n    readonly type = SET_EXPENSE_YEAR_ON_YEAR;\n    constructor(public payload: number) {}\n}\n\nexport class SetCategories implements Action {\n    readonly type = SET_CATEGORIES;\n    constructor(public payload: Category[]) {}\n}\n\nexport class SetTrendingExpenses implements Action {\n    readonly type = SET_TRENDING_EXPENSES;\n    constructor(public payload: CategoryExpense[]) {}\n}\n\nexport class SetCategoryExpenseDetail implements Action {\n    readonly type = SET_CATEGORY_EXPENSE_DETAIL;\n    constructor(public payload: ExpenseDetail[]) {}\n}\n\nexport class SetAnnualExpenseDetail implements Action {\n    readonly type = SET_ANNUAL_EXPENSE_DETAIL;\n    constructor(public payload: ExpenseDetail[]) {}\n}\n\nexport type DashboardActions = StartAnnualExpenseGraphLoading |\n                               StopAnnualExpenseGraphLoading |\n                               StartCategoryExpenseGraphLoading |\n                               StopCategoryExpenseGraphLoading |\n                               SetCurrentMonthExpense |\n                               SetPreviousMonthExpense |\n                               SetCurrentYearExpense |\n                               SetPreviousYearExpense |\n                               SetExpenseMonthonMonth |\n                               SetExpenseYearonYear |\n                               SetCategories |\n                               SetTrendingExpenses |\n                               SetCategoryExpenseDetail |\n                               SetAnnualExpenseDetail;","import * as dashboardActions from './dashboard.action';\nimport { Category, ExpenseHistory } from './expense.reducer';\n\nexport interface CategoryExpense{\n    category: string;\n    expense: number;\n}\n\nexport interface ExpenseDetail {\n    month: string;\n    amount: number;\n}\n\nexport interface DashboardState {\n    isAnnualExpenseGraphLoading: boolean;\n    isCategoryExpenseGraphLoading: boolean;\n    isDataUpdateInProgress: boolean;\n    currentMonthExpense: number;\n    previousMonthExpense: number;\n    currentYearExpense: number;\n    previousYearExpense: number;\n    expenseMonthonMonth: number;\n    expenseYearonYear: number;\n    categories: Category[];\n    trendingExpenses: CategoryExpense[];\n    categoryExpenseDetail: ExpenseDetail[];\n    annualExpenseDetail: ExpenseDetail[];\n}\n\nconst initialState: DashboardState = {\n    isAnnualExpenseGraphLoading: false,\n    isCategoryExpenseGraphLoading: false,\n    isDataUpdateInProgress: false,\n    currentMonthExpense: 0,\n    previousMonthExpense: 0,\n    currentYearExpense: 0,\n    previousYearExpense: 0,\n    expenseMonthonMonth: 0,\n    expenseYearonYear: 0,\n    categories: [],\n    trendingExpenses: [],\n    categoryExpenseDetail: [],\n    annualExpenseDetail: []\n}\n\nexport function DashboardReducer(state = initialState, action: dashboardActions.DashboardActions) {\n    switch(action.type){\n        case dashboardActions.START_ANNUAL_EXPENSE_GRAPH_LOADING:\n            return {\n                ... state,\n                isAnnualGraphLoading: true,\n                isDataUpdateInProgress: true\n            }\n        case dashboardActions.STOP_ANNUAL_EXPENSE_GRAPH_LOADING:\n            return {\n                ... state,\n                isAnnualGraphLoading: false,\n                isDataUpdateInProgress: false || state.isCategoryExpenseGraphLoading\n            }\n        case dashboardActions.START_CATEGORY_EXPENSE_GRAPH_LOADING:\n            return {\n                ... state,\n                isCategoryExpenseGraphLoading: true,\n                isDataUpdateInProgress: true\n            }\n        case dashboardActions.STOP_CATEGORY_EXPENSE_GRAPH_LOADING:\n            return {\n                ... state,\n                isCategoryExpenseGraphLoading : false,\n                isDataUpdateInProgress: false || state.isAnnualExpenseGraphLoading\n            }\n        case dashboardActions.SET_CURRENT_MONTH_EXPENSE:\n            return {\n                ... state,\n                currentMonthExpense: action.payload\n            }\n        case dashboardActions.SET_PREVIOUS_MONTH_EXPENSE:\n            return {\n                ... state,\n                previousMonthExpense: action.payload\n            }\n        case dashboardActions.SET_CURRENT_YEAR_EXPENSE:\n            return {\n                ... state,\n                currentYearExpense: action.payload\n            }\n        case dashboardActions.SET_PREVIOUS_YEAR_EXPENSE:\n            return {\n                ... state,\n                previousYearExpense: action.payload\n            }\n        case dashboardActions.SET_EXPENSE_MONTH_ON_MONTH:\n            return {\n                ... state,\n                expenseMonthonMonth: action.payload\n            }\n        case dashboardActions.SET_EXPENSE_YEAR_ON_YEAR:\n            return {\n                ... state,\n                expenseYearonYear: action.payload\n            }\n        case dashboardActions.SET_TRENDING_EXPENSES:\n            return {\n                ... state,\n                trendingExpenses: [... action.payload]\n            }\n        case dashboardActions.SET_CATEGORIES:\n            return {\n                ... state,\n                categories: [... action.payload]\n            }\n        case dashboardActions.SET_CATEGORY_EXPENSE_DETAIL:\n            return {\n                ... state,\n                categoryExpenseDetail: [... action.payload]\n            }\n        case dashboardActions.SET_ANNUAL_EXPENSE_DETAIL:\n            return {\n                ... state,\n                annualExpenseDetail: [... action.payload]\n            }\n        default:\n            return state;\n    }\n}","import { Action } from '@ngrx/store';\nimport { Category, ExpenseHistory } from './expense.reducer';\n\nexport const SET_EXPENSES = 'SET_EXPENSES';\nexport const SET_EDIT_MODE_ON = 'SET_EDIT_MODE_ON';\nexport const SET_EDIT_MODE_OFF = 'SET_EDIT_MODE_OFF';\nexport const SET_EDIT_EXPENSE_ELEMENT = 'SET_EDIT_EXPENSE_ELEMENT';\nexport const SET_EXPENSE_LOAD_ON = 'SET_EXPENSE_LOAD_ON';\nexport const SET_EXPENSE_LOAD_OFF = 'SET_EXPENSE_LOAD_OFF';\nexport const SET_SEARCH_DATE = 'SET_SEARCH_DATE';\n\nexport class SetExpenseData implements Action {\n    readonly type = SET_EXPENSES;\n    constructor(public payload: ExpenseHistory[]) { }\n}\n\nexport class SetEditModeOn implements Action {\n    readonly type = SET_EDIT_MODE_ON;\n}\n\nexport class SetEditModeOff implements Action {\n    readonly type = SET_EDIT_MODE_OFF;\n}\n\nexport class SetEditExpenseElement implements Action {\n    readonly type = SET_EDIT_EXPENSE_ELEMENT;\n    constructor(public payload: ExpenseHistory) { }\n}\n\nexport class SetLoadingOn implements Action {\n    readonly type = SET_EXPENSE_LOAD_ON;\n}\n\nexport class SetLoadingOff implements Action {\n    readonly type = SET_EXPENSE_LOAD_OFF;\n}\n\nexport class SetSearchDate implements Action {\n    readonly type = SET_SEARCH_DATE;\n    constructor(public startDate:Date, public endDate:Date) {}\n}\n\nexport type expenseAction = SetExpenseData | \n                            SetEditModeOn | \n                            SetEditModeOff | \n                            SetEditExpenseElement |\n                            SetLoadingOn |\n                            SetLoadingOff |\n                            SetSearchDate;","import * as expActions from './expense.action';\n\nexport interface Category {\n    Name: string;\n    Description: string;\n}\n\nexport interface ExpenseHistory {\n    id: string;\n    userId: string;\n    itemName: string;\n    comment: string;\n    purchaseDate: Date;\n    category: string;\n    price: number;\n    edited: boolean;\n}\n\nexport interface ExpenseState {\n    searchStartDate: Date;\n    searchEndDate: Date;\n    expenseHistory: ExpenseHistory[];\n    displayedColumns: string[];\n    isEditModeOn: boolean;\n    editExpense: ExpenseHistory;\n    isExpenseLoading: boolean;\n}\n\nconst initialState: ExpenseState = {\n    searchStartDate: new Date(),\n    searchEndDate: new Date(),\n    expenseHistory: [],\n    displayedColumns: ['itemName', 'price', 'purchaseDate', 'category'],\n    isEditModeOn: false,\n    editExpense: { id: '', \n                   userId: '',\n                   itemName: '', \n                   comment: '',\n                   purchaseDate: new Date,\n                   category: '',\n                   price: 0, \n                   edited: false },\n    isExpenseLoading: false\n};\n\nexport function ExpenseReducer(state = initialState, action: expActions.expenseAction) {\n    switch (action.type) {\n        case expActions.SET_EXPENSES:\n            return {\n                ...state,\n                expenseHistory: [...action.payload]\n            };\n        case expActions.SET_EDIT_MODE_ON:\n            return {\n                ...state,\n                isEditModeOn: true\n            };\n        case expActions.SET_EDIT_MODE_OFF:\n            return {\n                ...state,\n                isEditModeOn: false\n            };\n        case expActions.SET_EDIT_EXPENSE_ELEMENT:\n            return {\n                ...state,\n                editExpense: {...action.payload}\n            };\n        case expActions.SET_EXPENSE_LOAD_ON:\n            return {\n                ... state,\n                isExpenseLoading: true\n            };\n        case expActions.SET_EXPENSE_LOAD_OFF:\n            return {\n                ... state,\n                isExpenseLoading: false\n            };\n        case expActions.SET_SEARCH_DATE:\n            return {\n                ... state,\n                searchStartDate: action.startDate,\n                searchEndDate: action.endDate\n            };\n        default:\n            return state;\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig: {\n    apiKey: \"AIzaSyBCm-5dEaY80hMwCe9-Vekf-edcfWUlvG0\",\n    authDomain: \"expense-tracker-2bff2.firebaseapp.com\",\n    databaseURL: \"https://expense-tracker-2bff2.firebaseio.com\",\n    projectId: \"expense-tracker-2bff2\",\n    storageBucket: \"expense-tracker-2bff2.appspot.com\",\n    messagingSenderId: \"757956429532\",\n    appId: \"1:757956429532:web:60f3c664c859c8adf75619\",\n    measurementId: \"G-9G232RXKFH\"\n  },\n  url: \"https://expense-tracker-backend-production-4d1b.up.railway.app/api/\"\n  // url: \"http://localhost:8080/api/\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","var map = {\n\t\"./af\": 8685,\n\t\"./af.js\": 8685,\n\t\"./ar\": 254,\n\t\"./ar-dz\": 4312,\n\t\"./ar-dz.js\": 4312,\n\t\"./ar-kw\": 2614,\n\t\"./ar-kw.js\": 2614,\n\t\"./ar-ly\": 8630,\n\t\"./ar-ly.js\": 8630,\n\t\"./ar-ma\": 8674,\n\t\"./ar-ma.js\": 8674,\n\t\"./ar-sa\": 9032,\n\t\"./ar-sa.js\": 9032,\n\t\"./ar-tn\": 4730,\n\t\"./ar-tn.js\": 4730,\n\t\"./ar.js\": 254,\n\t\"./az\": 3052,\n\t\"./az.js\": 3052,\n\t\"./be\": 150,\n\t\"./be.js\": 150,\n\t\"./bg\": 3069,\n\t\"./bg.js\": 3069,\n\t\"./bm\": 3466,\n\t\"./bm.js\": 3466,\n\t\"./bn\": 8516,\n\t\"./bn-bd\": 557,\n\t\"./bn-bd.js\": 557,\n\t\"./bn.js\": 8516,\n\t\"./bo\": 6273,\n\t\"./bo.js\": 6273,\n\t\"./br\": 9588,\n\t\"./br.js\": 9588,\n\t\"./bs\": 9815,\n\t\"./bs.js\": 9815,\n\t\"./ca\": 3331,\n\t\"./ca.js\": 3331,\n\t\"./cs\": 1320,\n\t\"./cs.js\": 1320,\n\t\"./cv\": 2219,\n\t\"./cv.js\": 2219,\n\t\"./cy\": 8266,\n\t\"./cy.js\": 8266,\n\t\"./da\": 6427,\n\t\"./da.js\": 6427,\n\t\"./de\": 7435,\n\t\"./de-at\": 2871,\n\t\"./de-at.js\": 2871,\n\t\"./de-ch\": 2994,\n\t\"./de-ch.js\": 2994,\n\t\"./de.js\": 7435,\n\t\"./dv\": 2357,\n\t\"./dv.js\": 2357,\n\t\"./el\": 5649,\n\t\"./el.js\": 5649,\n\t\"./en-au\": 9961,\n\t\"./en-au.js\": 9961,\n\t\"./en-ca\": 9878,\n\t\"./en-ca.js\": 9878,\n\t\"./en-gb\": 3924,\n\t\"./en-gb.js\": 3924,\n\t\"./en-ie\": 864,\n\t\"./en-ie.js\": 864,\n\t\"./en-il\": 1579,\n\t\"./en-il.js\": 1579,\n\t\"./en-in\": 940,\n\t\"./en-in.js\": 940,\n\t\"./en-nz\": 6181,\n\t\"./en-nz.js\": 6181,\n\t\"./en-sg\": 4301,\n\t\"./en-sg.js\": 4301,\n\t\"./eo\": 5291,\n\t\"./eo.js\": 5291,\n\t\"./es\": 4529,\n\t\"./es-do\": 3764,\n\t\"./es-do.js\": 3764,\n\t\"./es-mx\": 2584,\n\t\"./es-mx.js\": 2584,\n\t\"./es-us\": 3425,\n\t\"./es-us.js\": 3425,\n\t\"./es.js\": 4529,\n\t\"./et\": 5203,\n\t\"./et.js\": 5203,\n\t\"./eu\": 678,\n\t\"./eu.js\": 678,\n\t\"./fa\": 3483,\n\t\"./fa.js\": 3483,\n\t\"./fi\": 6262,\n\t\"./fi.js\": 6262,\n\t\"./fil\": 2521,\n\t\"./fil.js\": 2521,\n\t\"./fo\": 4555,\n\t\"./fo.js\": 4555,\n\t\"./fr\": 3131,\n\t\"./fr-ca\": 8239,\n\t\"./fr-ca.js\": 8239,\n\t\"./fr-ch\": 1702,\n\t\"./fr-ch.js\": 1702,\n\t\"./fr.js\": 3131,\n\t\"./fy\": 267,\n\t\"./fy.js\": 267,\n\t\"./ga\": 3821,\n\t\"./ga.js\": 3821,\n\t\"./gd\": 1753,\n\t\"./gd.js\": 1753,\n\t\"./gl\": 4074,\n\t\"./gl.js\": 4074,\n\t\"./gom-deva\": 2762,\n\t\"./gom-deva.js\": 2762,\n\t\"./gom-latn\": 5969,\n\t\"./gom-latn.js\": 5969,\n\t\"./gu\": 2809,\n\t\"./gu.js\": 2809,\n\t\"./he\": 5402,\n\t\"./he.js\": 5402,\n\t\"./hi\": 315,\n\t\"./hi.js\": 315,\n\t\"./hr\": 410,\n\t\"./hr.js\": 410,\n\t\"./hu\": 8288,\n\t\"./hu.js\": 8288,\n\t\"./hy-am\": 8999,\n\t\"./hy-am.js\": 8999,\n\t\"./id\": 1334,\n\t\"./id.js\": 1334,\n\t\"./is\": 6959,\n\t\"./is.js\": 6959,\n\t\"./it\": 4864,\n\t\"./it-ch\": 1124,\n\t\"./it-ch.js\": 1124,\n\t\"./it.js\": 4864,\n\t\"./ja\": 6141,\n\t\"./ja.js\": 6141,\n\t\"./jv\": 9187,\n\t\"./jv.js\": 9187,\n\t\"./ka\": 2136,\n\t\"./ka.js\": 2136,\n\t\"./kk\": 4332,\n\t\"./kk.js\": 4332,\n\t\"./km\": 8607,\n\t\"./km.js\": 8607,\n\t\"./kn\": 4305,\n\t\"./kn.js\": 4305,\n\t\"./ko\": 234,\n\t\"./ko.js\": 234,\n\t\"./ku\": 6003,\n\t\"./ku.js\": 6003,\n\t\"./ky\": 5061,\n\t\"./ky.js\": 5061,\n\t\"./lb\": 2786,\n\t\"./lb.js\": 2786,\n\t\"./lo\": 6183,\n\t\"./lo.js\": 6183,\n\t\"./lt\": 29,\n\t\"./lt.js\": 29,\n\t\"./lv\": 4169,\n\t\"./lv.js\": 4169,\n\t\"./me\": 8577,\n\t\"./me.js\": 8577,\n\t\"./mi\": 8177,\n\t\"./mi.js\": 8177,\n\t\"./mk\": 337,\n\t\"./mk.js\": 337,\n\t\"./ml\": 5260,\n\t\"./ml.js\": 5260,\n\t\"./mn\": 2325,\n\t\"./mn.js\": 2325,\n\t\"./mr\": 4695,\n\t\"./mr.js\": 4695,\n\t\"./ms\": 5334,\n\t\"./ms-my\": 7151,\n\t\"./ms-my.js\": 7151,\n\t\"./ms.js\": 5334,\n\t\"./mt\": 3570,\n\t\"./mt.js\": 3570,\n\t\"./my\": 7963,\n\t\"./my.js\": 7963,\n\t\"./nb\": 8028,\n\t\"./nb.js\": 8028,\n\t\"./ne\": 6638,\n\t\"./ne.js\": 6638,\n\t\"./nl\": 302,\n\t\"./nl-be\": 6782,\n\t\"./nl-be.js\": 6782,\n\t\"./nl.js\": 302,\n\t\"./nn\": 3501,\n\t\"./nn.js\": 3501,\n\t\"./oc-lnc\": 563,\n\t\"./oc-lnc.js\": 563,\n\t\"./pa-in\": 869,\n\t\"./pa-in.js\": 869,\n\t\"./pl\": 5302,\n\t\"./pl.js\": 5302,\n\t\"./pt\": 9687,\n\t\"./pt-br\": 4884,\n\t\"./pt-br.js\": 4884,\n\t\"./pt.js\": 9687,\n\t\"./ro\": 5773,\n\t\"./ro.js\": 5773,\n\t\"./ru\": 3627,\n\t\"./ru.js\": 3627,\n\t\"./sd\": 355,\n\t\"./sd.js\": 355,\n\t\"./se\": 3427,\n\t\"./se.js\": 3427,\n\t\"./si\": 1848,\n\t\"./si.js\": 1848,\n\t\"./sk\": 4590,\n\t\"./sk.js\": 4590,\n\t\"./sl\": 184,\n\t\"./sl.js\": 184,\n\t\"./sq\": 6361,\n\t\"./sq.js\": 6361,\n\t\"./sr\": 8965,\n\t\"./sr-cyrl\": 1287,\n\t\"./sr-cyrl.js\": 1287,\n\t\"./sr.js\": 8965,\n\t\"./ss\": 5456,\n\t\"./ss.js\": 5456,\n\t\"./sv\": 451,\n\t\"./sv.js\": 451,\n\t\"./sw\": 7558,\n\t\"./sw.js\": 7558,\n\t\"./ta\": 2702,\n\t\"./ta.js\": 2702,\n\t\"./te\": 3693,\n\t\"./te.js\": 3693,\n\t\"./tet\": 1243,\n\t\"./tet.js\": 1243,\n\t\"./tg\": 2500,\n\t\"./tg.js\": 2500,\n\t\"./th\": 5768,\n\t\"./th.js\": 5768,\n\t\"./tk\": 7761,\n\t\"./tk.js\": 7761,\n\t\"./tl-ph\": 5780,\n\t\"./tl-ph.js\": 5780,\n\t\"./tlh\": 9590,\n\t\"./tlh.js\": 9590,\n\t\"./tr\": 3807,\n\t\"./tr.js\": 3807,\n\t\"./tzl\": 3857,\n\t\"./tzl.js\": 3857,\n\t\"./tzm\": 654,\n\t\"./tzm-latn\": 8806,\n\t\"./tzm-latn.js\": 8806,\n\t\"./tzm.js\": 654,\n\t\"./ug-cn\": 845,\n\t\"./ug-cn.js\": 845,\n\t\"./uk\": 9232,\n\t\"./uk.js\": 9232,\n\t\"./ur\": 7052,\n\t\"./ur.js\": 7052,\n\t\"./uz\": 7967,\n\t\"./uz-latn\": 2233,\n\t\"./uz-latn.js\": 2233,\n\t\"./uz.js\": 7967,\n\t\"./vi\": 8615,\n\t\"./vi.js\": 8615,\n\t\"./x-pseudo\": 2320,\n\t\"./x-pseudo.js\": 2320,\n\t\"./yo\": 1313,\n\t\"./yo.js\": 1313,\n\t\"./zh-cn\": 4490,\n\t\"./zh-cn.js\": 4490,\n\t\"./zh-hk\": 5910,\n\t\"./zh-hk.js\": 5910,\n\t\"./zh-mo\": 8262,\n\t\"./zh-mo.js\": 8262,\n\t\"./zh-tw\": 4223,\n\t\"./zh-tw.js\": 4223\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6700;"],"names":["RouterModule","LoginComponent","SignupComponent","routes","path","component","redirectTo","pathMatch","loadChildren","then","m","DashboardRoutingModule","ExpenseRoutingModule","ProfileRoutingModule","AppRoutingModule","forRoot","imports","exports","appReducer","FeedbackFormComponent","i0","AppComponent","constructor","store","matDialog","authService","ngOnInit","isAuthenticated$","select","getIsAuthenticated","autoLogin","onToggle","sidenavMode","sidenav","toggle","onSideNavLoad","window","innerWidth","open","onResize","event","target","undefined","close","onClick","selectors","viewQuery","ctx","BrowserModule","BrowserAnimationsModule","HeaderComponent","SidebarComponent","DashboardComponent","ExpenseComponent","EditExpenseComponent","NewExpenseComponent","MaterialModule","FormsModule","ReactiveFormsModule","StoreModule","AuthReducer","ExpenseReducer","ExpenseHistoryComponent","DialogComponent","ExpenseTableComponent","ExpenseExpandPanelComponent","DashboardReducer","MonthlyExpenseGraphComponent","YearlyExpenseGraphComponent","YearlyExpenseCategoryGraphComponent","ChartsModule","LayoutModule","NgApexchartsModule","AnnualExpenseCategoryGraphComponent","LoadingComponent","HttpClientModule","HTTP_INTERCEPTORS","AuthInterceptor","ToastrModule","AppModule","bootstrap","provide","useClass","multi","auth","expense","dashboard","timeOut","positionClass","preventDuplicates","declarations","route","isBufferOn$","getIsBufferOn","onSignUp","navigate","onSubmit","login","loginForm","value","email","password","onClear","reset","onSigninWithFacebook","signInWithFacebook","onSigninWithGoogle","signInWithGoogle","UntypedFormGroup","UntypedFormControl","Validators","initForm","signupForm","required","minLength","confirmPassword","displayName","dob","tnc","signup","decls","vars","consts","template","AuthGuard","dashboardRoute","canActivate","forChild","expenseRoutes","children","CommonModule","ProfileComponent","profileRoutes","map","Breakpoints","breakpointObserver","dashboardService","iconRegistry","sanitizer","Date","getFullYear","observe","Handset","pipe","matches","gridCol","smallCard","row","col","wideCard","mediumCard","rowheight","addSvgIcon","bypassSecurityTrustResourceUrl","today","getMonth","currentMonth$","getCurrentMonth","isDataUpdateInProgress$","getIsDataUpdateInProgress","allMonths$","getAllMonths","ngAfterViewInit","currentMonthExpense$","getCurrentMonthExpense","previousMonthExpense$","getPreviousMonthExpense","currentYearExpense$","getCurrentYearExpense","previousYearExpense$","getPreviousYearExpense","percentageIncreaseMom$","getExpenseMonthonMonth","percentageIncreaseYoy$","getExpenseYearonYear","trendingExpenseData$","getTrendingExpenses","categories$","getCategories","onMonthChange","data","date","startDate","endDate","onChange","take","utilService","backgroundColor","responsive","legend","position","labels","usePointStyle","ngOnDestroy","monthlyExpenseDetailSubscription","unsubscribe","graphData","length","isNoData","monthlyExpenseDetail$","subscribe","monthlyCategoryExpense","columnLabels","categories","chartColors","push","getRandomColor","monthlyExpenseChangeEvent","monthlyExpenseDetail","inputs","expenseStore","getAnnualExpenseDetailByCategory","expenseDetail","monthName","month","amount","series","name","chartOptions","chart","height","type","plotOptions","bar","dataLabels","enabled","offsetY","style","fontSize","colors","xaxis","axisBorder","show","axisTicks","crosshairs","fill","gradient","colorFrom","colorTo","stops","opacityFrom","opacityTo","tooltip","shade","shadeIntensity","gradientToColors","inverseColors","yaxis","title","text","onCategoryChange","updateSeries","onYearChange","getAnnualExpenseDetail","forEach","element","annualExpense","months","stroke","width","curve","align","color","markers","size","strokeColors","strokeWidth","hover","min","Math","max","ngAfterContentInit","expenseActions","expenseService","expense$","getEditElement","onSave","expenseId","id","updateExpense","userId","editForm","itemName","ItemName","price","Price","category","Category","comment","Comment","purchaseDate","PurchaseDate","edited","expenseTabSelect","next","onCancel","dispatch","SetEditModeOff","MatLegacyTableDataSource","MatTableDataSource","confirmDelete","dialogRef","dialogType","afterClosed","result","deleteExpense","openComment","expenseComment","onEdit","SetEditModeOn","SetEditExpenseElement","displayedColumn$","datasource","SetLoadingOn","isLoading$","getExpenseLoading","getDisplayedColumns","getExpenses","setTimeout","filterData","searchForm","valueChanges","filterStartDate","filterEndDate","SetSearchDate","refreshExpenses","MatLegacyPaginator","MatPaginator","paginator","index","selectedIndex","isEditMode$","getEditMode","UntypedFormArray","newExpenseForm","expenseItemArray","addNewExpenseItem","get","itemPrice","onDelete","removeAt","saveExpenses","expenseItemArrayLength","i","MatToolbarModule","MatLegacyButtonModule","MatButtonModule","MatLegacyFormFieldModule","MatFormFieldModule","MatLegacyInputModule","MatInputModule","MatDividerModule","MatCardModule","MatDatepickerModule","MatNativeDateModule","MatLegacyCheckboxModule","MatCheckboxModule","MatLegacyProgressBarModule","MatProgressBarModule","MatLegacySnackBarModule","MatSnackBarModule","MatSidenavModule","MatLegacyListModule","MatListModule","MatIconModule","MatLegacyMenuModule","MatMenuModule","MatLegacyTabsModule","MatTabsModule","MatLegacySelectModule","MatSelectModule","MatLegacyTableModule","MatTableModule","MatLegacyPaginatorModule","MatPaginatorModule","MatLegacyTooltipModule","MatTooltipModule","MatLegacyDialogModule","MatDialogModule","MatLegacyProgressSpinnerModule","MatProgressSpinnerModule","MatExpansionModule","MatGridListModule","EventEmitter","onLogout","logout","toggleSideBar","emit","outputs","sidenavLoadEvent","sidenavClickEvent","state","factory","providedIn","intercept","req","token","getToken","authRequest","clone","headers","set","handle","authActions","environment","AuthService","snackbar","router","http","StartBuffer","StartAuthentication","post","url","userName","response","user","firstName","lastName","StopBuffer","Authenticate","initLoadData","error","message","duration","StopAuthentication","userDetail","UnAuthenticate","of","Subject","dashboardActions","switchMap","DashboardService","nextIndex","previousIndex","StartAnnualExpenseGraphLoading","StartCategoryExpenseGraphLoading","getCurrentMonthExpenseDetail","SetCurrentMonthExpense","getPreviousMonthExpenseDetail","SetPreviousMonthExpense","getCurrentYearExpenseDetail","SetCurrentYearExpense","getPreviousYearExpenseDetail","SetPreviousYearExpense","SetExpenseMonthonMonth","SetExpenseYearonYear","SetTrendingExpenses","SetCategories","Name","SetCategoryExpenseDetail","StopCategoryExpenseGraphLoading","SetAnnualExpenseDetail","StopAnnualExpenseGraphLoading","getUserId","params","_id","getExpenseDetailByYear","year","getExpenseDetailByMonth","refreshData","toLocaleString","Description","description","getlastMonthNames","numberOfMonths","currentMonthIndex","reverse","allMonths","currentMonth","ExpenseService","toastr","expenseItems","expenseHistory","item","expenseItem","success","getStartDate","toDateString","getEndDate","SetExpenseData","SetLoadingOff","delete","console","log","FeedbackService","saveFeedBack","feedbackDetail","UtilService","letters","floor","random","MAT_LEGACY_DIALOG_DATA","MAT_DIALOG_DATA","matdialog","feedbackService","UserId","Comments","feedbackForm","comments","createFeatureSelector","createSelector","getAuthState","isAuthenticated","userid","isBufferOn","getExpenseState","displayedColumns","isEditModeOn","editExpense","isExpenseLoading","searchStartDate","searchEndDate","getDashboardState","getAnnualGraphLoadingStatus","isAnnualExpenseGraphLoading","isDataUpdateInProgress","getCategoryExpenseGraphLoadingStatus","isCategoryExpenseGraphLoading","currentMonthExpense","previousMonthExpense","currentYearExpense","previousYearExpense","expenseMonthonMonth","expenseYearonYear","trendingExpenses","getCategoryExpenseDetail","categoryExpenseDetail","annualExpenseDetail","AUTHENTICATE","UNAUTHENTICATE","STARTBUFFER","STOPBUFFER","START_AUTHENTICATION","STOP_AUTHENTICATION","authAction","initialState","action","START_ANNUAL_EXPENSE_GRAPH_LOADING","STOP_ANNUAL_EXPENSE_GRAPH_LOADING","START_CATEGORY_EXPENSE_GRAPH_LOADING","STOP_CATEGORY_EXPENSE_GRAPH_LOADING","SET_CURRENT_MONTH_EXPENSE","SET_PREVIOUS_MONTH_EXPENSE","SET_CURRENT_YEAR_EXPENSE","SET_PREVIOUS_YEAR_EXPENSE","SET_EXPENSE_MONTH_ON_MONTH","SET_EXPENSE_YEAR_ON_YEAR","SET_CATEGORIES","SET_TRENDING_EXPENSES","SET_CATEGORY_EXPENSE_DETAIL","SET_ANNUAL_EXPENSE_DETAIL","payload","isAnnualGraphLoading","SET_EXPENSES","SET_EDIT_MODE_ON","SET_EDIT_MODE_OFF","SET_EDIT_EXPENSE_ELEMENT","SET_EXPENSE_LOAD_ON","SET_EXPENSE_LOAD_OFF","SET_SEARCH_DATE","expActions","production","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[62]}